{
  "contractName": "CryptoWalletInsurance",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_insured",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum CryptoWalletInsurance.PolicyType",
          "name": "newPolicy",
          "type": "uint8"
        }
      ],
      "name": "PolicyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PricePaid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "coverageAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insured",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "enum CryptoWalletInsurance.PolicyType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [],
      "name": "getInsured",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum CryptoWalletInsurance.PolicyType",
          "name": "_policy",
          "type": "uint8"
        }
      ],
      "name": "setPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payPrice",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_insured\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum CryptoWalletInsurance.PolicyType\",\"name\":\"newPolicy\",\"type\":\"uint8\"}],\"name\":\"PolicyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PricePaid\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverageAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInsured\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insured\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payPrice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"enum CryptoWalletInsurance.PolicyType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CryptoWalletInsurance.PolicyType\",\"name\":\"_policy\",\"type\":\"uint8\"}],\"name\":\"setPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Wallet.sol\":\"CryptoWalletInsurance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"project:/contracts/Wallet.sol\":{\"keccak256\":\"0x3ccfc45cb2b5a52df0abfceaa6fbfcc4e045ba7f0837542cbe76db92cfd17e39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7cd7a2173327f485d4daedc15639120a57c62e83f26bad79c5c3008bf6e267e6\",\"dweb:/ipfs/QmTYLsfMKEPMQtPWLu6dqPWjuapgqkHvrKBYtoWnr6Xs2d\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b506040516107ff3803806107ff83398101604081905261002e916100e0565b60015f55806001600160a01b03811661006057604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100698161008f565b50600280546001600160a01b0319166001600160a01b039290921691909117905561010d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156100f0575f80fd5b81516001600160a01b0381168114610106575f80fd5b9392505050565b6106e58061011a5f395ff3fe6080604052600436106100a8575f3560e01c806374bce0bc1161006257806374bce0bc146101685780638da5cb5b14610187578063a035b1fe146101a4578063c4b8db46146101b9578063eebb1363146101ce578063f2fde38b146101ed575f80fd5b80630505c8c9146100b35780634cbc03d9146100e25780634ce115d8146101135780634e71d92d1461011d57806367c0d00f14610131578063715018a614610154575f80fd5b366100af57005b5f80fd5b3480156100be575f80fd5b506006546100cc9060ff1681565b6040516100d991906105d1565b60405180910390f35b3480156100ed575f80fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016100d9565b61011b61020c565b005b348015610128575f80fd5b5061011b6102cf565b34801561013c575f80fd5b5061014660045481565b6040519081526020016100d9565b34801561015f575f80fd5b5061011b6103cd565b348015610173575f80fd5b5061011b6101823660046105f7565b6103de565b348015610192575f80fd5b506001546001600160a01b03166100fb565b3480156101af575f80fd5b5061014660035481565b3480156101c4575f80fd5b5061014660055481565b3480156101d9575f80fd5b506002546100fb906001600160a01b031681565b3480156101f8575f80fd5b5061011b61020736600461061c565b6104da565b6002546001600160a01b0316331461023f5760405162461bcd60e51b815260040161023690610642565b60405180910390fd5b610247610517565b600354341461028a5760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420707269636560881b6044820152606401610236565b4260055560405134815233907ffbb78d90c03ede71a52f887ed761d6178e310a2c426206ba0dc64a01691e16f1906020015b60405180910390a26102cd60015f55565b565b6002546001600160a01b031633146102f95760405162461bcd60e51b815260040161023690610642565b610301610517565b6005546103119062278d0061068a565b4211156103515760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606401610236565b6002546004546040516001600160a01b039092169181156108fc0291905f818181858888f1935050505015801561038a573d5f803e3d5ffd5b506002546004546040519081526001600160a01b03909116907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a906020016102bc565b6103d561053f565b6102cd5f61056c565b6002546001600160a01b031633146104085760405162461bcd60e51b815260040161023690610642565b6006805482919060ff191660018381811115610426576104266105bd565b02179055505f60065460ff166001811115610443576104436105bd565b036104635766038d7ea4c6800060035566470de4df820000600455610498565b600160065460ff16600181111561047c5761047c6105bd565b03610498576658d15e1762800060035566b1a2bc2ec500006004555b6006546040517f72a13a5c6bbfd98d3dc4719b767656873b3c13c3139cb44ab7d3002250ba63da916104cf9160ff909116906105d1565b60405180910390a150565b6104e261053f565b6001600160a01b03811661050b57604051631e4fbdf760e01b81525f6004820152602401610236565b6105148161056c565b50565b60025f540361053957604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6001546001600160a01b031633146102cd5760405163118cdaa760e01b8152336004820152602401610236565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52602160045260245ffd5b60208101600283106105f157634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215610607575f80fd5b813560028110610615575f80fd5b9392505050565b5f6020828403121561062c575f80fd5b81356001600160a01b0381168114610615575f80fd5b60208082526028908201527f4f6e6c792074686520696e73757265642063616e20706572666f726d20746869604082015267399030b1ba34b7b760c11b606082015260800190565b808201808211156106a957634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358221220822e1c166f6a14079eb372591412dd28eabf1b5adaf94d3b47942622d79a219764736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100a8575f3560e01c806374bce0bc1161006257806374bce0bc146101685780638da5cb5b14610187578063a035b1fe146101a4578063c4b8db46146101b9578063eebb1363146101ce578063f2fde38b146101ed575f80fd5b80630505c8c9146100b35780634cbc03d9146100e25780634ce115d8146101135780634e71d92d1461011d57806367c0d00f14610131578063715018a614610154575f80fd5b366100af57005b5f80fd5b3480156100be575f80fd5b506006546100cc9060ff1681565b6040516100d991906105d1565b60405180910390f35b3480156100ed575f80fd5b506002546001600160a01b03165b6040516001600160a01b0390911681526020016100d9565b61011b61020c565b005b348015610128575f80fd5b5061011b6102cf565b34801561013c575f80fd5b5061014660045481565b6040519081526020016100d9565b34801561015f575f80fd5b5061011b6103cd565b348015610173575f80fd5b5061011b6101823660046105f7565b6103de565b348015610192575f80fd5b506001546001600160a01b03166100fb565b3480156101af575f80fd5b5061014660035481565b3480156101c4575f80fd5b5061014660055481565b3480156101d9575f80fd5b506002546100fb906001600160a01b031681565b3480156101f8575f80fd5b5061011b61020736600461061c565b6104da565b6002546001600160a01b0316331461023f5760405162461bcd60e51b815260040161023690610642565b60405180910390fd5b610247610517565b600354341461028a5760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420707269636560881b6044820152606401610236565b4260055560405134815233907ffbb78d90c03ede71a52f887ed761d6178e310a2c426206ba0dc64a01691e16f1906020015b60405180910390a26102cd60015f55565b565b6002546001600160a01b031633146102f95760405162461bcd60e51b815260040161023690610642565b610301610517565b6005546103119062278d0061068a565b4211156103515760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606401610236565b6002546004546040516001600160a01b039092169181156108fc0291905f818181858888f1935050505015801561038a573d5f803e3d5ffd5b506002546004546040519081526001600160a01b03909116907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a906020016102bc565b6103d561053f565b6102cd5f61056c565b6002546001600160a01b031633146104085760405162461bcd60e51b815260040161023690610642565b6006805482919060ff191660018381811115610426576104266105bd565b02179055505f60065460ff166001811115610443576104436105bd565b036104635766038d7ea4c6800060035566470de4df820000600455610498565b600160065460ff16600181111561047c5761047c6105bd565b03610498576658d15e1762800060035566b1a2bc2ec500006004555b6006546040517f72a13a5c6bbfd98d3dc4719b767656873b3c13c3139cb44ab7d3002250ba63da916104cf9160ff909116906105d1565b60405180910390a150565b6104e261053f565b6001600160a01b03811661050b57604051631e4fbdf760e01b81525f6004820152602401610236565b6105148161056c565b50565b60025f540361053957604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6001546001600160a01b031633146102cd5760405163118cdaa760e01b8152336004820152602401610236565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52602160045260245ffd5b60208101600283106105f157634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215610607575f80fd5b813560028110610615575f80fd5b9392505050565b5f6020828403121561062c575f80fd5b81356001600160a01b0381168114610615575f80fd5b60208082526028908201527f4f6e6c792074686520696e73757265642063616e20706572666f726d20746869604082015267399030b1ba34b7b760c11b606082015260800190565b808201808211156106a957634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358221220822e1c166f6a14079eb372591412dd28eabf1b5adaf94d3b47942622d79a219764736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:514:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:6",
                "type": ""
              }
            ],
            "src": "14:290:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "432:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "462:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "477:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "493:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "498:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "489:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "502:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "485:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "485:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "473:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "473:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "455:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "379:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "390:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "401:4:6",
                "type": ""
              }
            ],
            "src": "309:203:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2769:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:6",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:6"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "259:229:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "269:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "281:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "292:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "269:4:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "337:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "358:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "365:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "370:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "361:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "361:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "351:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "351:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "351:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:4:6",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "395:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "395:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "395:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "317:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "325:1:6",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "314:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "307:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:21:6"
                  },
                  "nodeType": "YulIf",
                  "src": "304:144:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "464:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "475:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "457:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_PolicyType_$529__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "239:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "250:4:6",
                "type": ""
              }
            ],
            "src": "146:342:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "594:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "604:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "616:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "627:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "612:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "612:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "604:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "646:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "661:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "677:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "682:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "673:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "673:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "686:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "669:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "669:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "657:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "657:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "639:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "639:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "639:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "563:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "574:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "585:4:6",
                "type": ""
              }
            ],
            "src": "493:203:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "802:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "812:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "824:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "835:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "820:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "812:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "854:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "865:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "847:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "847:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "771:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "782:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "793:4:6",
                "type": ""
              }
            ],
            "src": "701:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:186:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1013:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1022:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1025:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1015:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1015:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1015:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "988:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1009:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "977:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1038:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1064:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1051:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1042:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1107:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1116:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1119:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1109:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1109:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1109:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1096:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1103:1:6",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1093:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:20:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1083:40:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1132:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1142:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1132:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_PolicyType_$529",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "933:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "944:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "956:6:6",
                "type": ""
              }
            ],
            "src": "883:270:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1228:216:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1274:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1283:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1286:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1276:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1276:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1276:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1249:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1258:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1245:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1245:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1270:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1241:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1238:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1299:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1325:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1312:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1303:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1398:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1407:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1410:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1400:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1400:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1400:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1357:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1368:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1383:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1388:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1379:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1379:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1392:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1375:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1364:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1364:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1354:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1354:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1347:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1347:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1344:70:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1423:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1433:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1423:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1194:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1205:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1217:6:6",
                "type": ""
              }
            ],
            "src": "1158:286:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1623:230:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1640:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1651:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1633:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1633:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1633:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1674:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1685:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1670:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1670:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1690:2:6",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1663:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1663:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1663:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1713:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1724:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1709:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1709:18:6"
                      },
                      {
                        "hexValue": "4f6e6c792074686520696e73757265642063616e20706572666f726d20746869",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1729:34:6",
                        "type": "",
                        "value": "Only the insured can perform thi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1702:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1702:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1702:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1784:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1795:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1780:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1780:18:6"
                      },
                      {
                        "hexValue": "7320616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1800:10:6",
                        "type": "",
                        "value": "s action"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1773:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1773:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1773:38:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1820:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1832:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1843:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1828:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1828:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1820:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1600:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1614:4:6",
                "type": ""
              }
            ],
            "src": "1449:404:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2032:165:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2049:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2060:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2042:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2083:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2094:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2079:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2079:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:2:6",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2072:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2072:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:18:6"
                      },
                      {
                        "hexValue": "496e636f7272656374207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2138:17:6",
                        "type": "",
                        "value": "Incorrect price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2111:45:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2165:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2177:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2188:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2173:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2173:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2165:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2009:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2023:4:6",
                "type": ""
              }
            ],
            "src": "1858:339:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2250:174:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2260:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2271:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2274:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2267:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2267:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2260:3:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2307:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2328:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2335:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2340:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2331:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2331:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2321:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2321:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2321:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2372:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2375:4:6",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2365:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2365:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2365:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2400:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2403:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2393:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2393:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2393:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2291:1:6"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "2294:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2288:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2288:10:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2285:133:6"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2233:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2236:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2242:3:6",
                "type": ""
              }
            ],
            "src": "2202:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2603:164:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2620:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2631:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2613:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2613:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2654:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2665:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2650:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2650:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2670:2:6",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2643:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2643:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2643:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2693:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2704:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2689:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2689:18:6"
                      },
                      {
                        "hexValue": "506f6c6963792065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2709:16:6",
                        "type": "",
                        "value": "Policy expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2682:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2682:44:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2682:44:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2735:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2747:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2758:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2743:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2735:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2580:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2594:4:6",
                "type": ""
              }
            ],
            "src": "2429:338:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_PolicyType_$529__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_enum$_PolicyType_$529(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only the insured can perform thi\")\n        mstore(add(headStart, 96), \"s action\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Incorrect price\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Policy expired\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "172:1589:5:-:0;;;722:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:1:2;1917:7;:21;760:8:5;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:6;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;780:7:5::1;:18:::0;;-1:-1:-1;;;;;;780:18:5::1;-1:-1:-1::0;;;;;780:18:5;;;::::1;::::0;;;::::1;::::0;;172:1589;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;309:203::-;172:1589:5;;;;;;",
  "deployedSourceMap": "172:1589:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;395:24;;;;;;;;;;-1:-1:-1;395:24:5;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;811:83;;;;;;;;;;-1:-1:-1;880:7:5;;-1:-1:-1;;;;;880:7:5;811:83;;;-1:-1:-1;;;;;657:32:6;;;639:51;;627:2;612:18;811:83:5;493:203:6;1284:206:5;;;:::i;:::-;;1496:228;;;;;;;;;;;;;:::i;291:29::-;;;;;;;;;;;;;;;;;;;847:25:6;;;835:2;820:18;291:29:5;701:177:6;2293:101:0;;;;;;;;;;;;;:::i;900:378:5:-;;;;;;;;;;-1:-1:-1;900:378:5;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;265:20:5;;;;;;;;;;;;;;;;326:23;;;;;;;;;;;;;;;;237:22;;;;;;;;;;-1:-1:-1;237:22:5;;;;-1:-1:-1;;;;;237:22:5;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1284:206:5:-;646:7;;-1:-1:-1;;;;;646:7:5;632:10;:21;624:74;;;;-1:-1:-1;;;624:74:5;;;;;;;:::i;:::-;;;;;;;;;2356:21:2::1;:19;:21::i;:::-;1375:5:5::2;;1362:9;:18;1354:46;;;::::0;-1:-1:-1;;;1354:46:5;;2060:2:6;1354:46:5::2;::::0;::::2;2042:21:6::0;2099:2;2079:18;;;2072:30;-1:-1:-1;;;2118:18:6;;;2111:45;2173:18;;1354:46:5::2;1858:339:6::0;1354:46:5::2;1421:15;1410:8;:26:::0;1451:32:::2;::::0;1473:9:::2;847:25:6::0;;1461:10:5::2;::::0;1451:32:::2;::::0;835:2:6;820:18;1451:32:5::2;;;;;;;;2398:20:2::1;1713:1:::0;2924:7;:21;2744:208;2398:20:::1;1284:206:5:o:0;1496:228::-;646:7;;-1:-1:-1;;;;;646:7:5;632:10;:21;624:74;;;;-1:-1:-1;;;624:74:5;;;;;;;:::i;:::-;2356:21:2::1;:19;:21::i;:::-;1582:8:5::2;::::0;:18:::2;::::0;1593:7:::2;1582:18;:::i;:::-;1563:15;:37;;1555:64;;;::::0;-1:-1:-1;;;1555:64:5;;2631:2:6;1555:64:5::2;::::0;::::2;2613:21:6::0;2670:2;2650:18;;;2643:30;-1:-1:-1;;;2689:18:6;;;2682:44;2743:18;;1555:64:5::2;2429:338:6::0;1555:64:5::2;1637:7;::::0;1655:14:::2;::::0;1629:41:::2;::::0;-1:-1:-1;;;;;1637:7:5;;::::2;::::0;1629:41;::::2;;;::::0;1655:14;1637:7:::2;1629:41:::0;1637:7;1629:41;1655:14;1637:7;1629:41;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1693:7:5::2;::::0;1702:14:::2;::::0;1685:32:::2;::::0;847:25:6;;;-1:-1:-1;;;;;1693:7:5;;::::2;::::0;1685:32:::2;::::0;835:2:6;820:18;1685:32:5::2;701:177:6::0;2293:101:0;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;900:378:5:-:0;646:7;;-1:-1:-1;;;;;646:7:5;632:10;:21;624:74;;;;-1:-1:-1;;;624:74:5;;;;;;;:::i;:::-;968:6:::1;:16:::0;;977:7;;968:6;-1:-1:-1;;968:16:5::1;::::0;977:7;968:16;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;1008:16:5::1;998:6;::::0;::::1;;::::0;:26;::::1;;;;;;:::i;:::-;::::0;994:242:::1;;1048:11;1040:5;:19:::0;1090:10:::1;1073:14;:27:::0;994:242:::1;;;1131:18;1121:6;::::0;::::1;;::::0;:28;::::1;;;;;;:::i;:::-;::::0;1117:119:::1;;1173:11;1165:5;:19:::0;1215:10:::1;1198:14;:27:::0;1117:119:::1;1264:6;::::0;1250:21:::1;::::0;::::1;::::0;::::1;::::0;1264:6:::1;::::0;;::::1;::::0;1250:21:::1;:::i;:::-;;;;;;;;900:378:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;639:51:6::0;612:18;;2672:31:0::1;493:203:6::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2431:307:2:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:2;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;639:51:6;612:18;;1901:40:0;493:203:6;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:342;292:2;277:18;;325:1;314:13;;304:144;;370:10;365:3;361:20;358:1;351:31;405:4;402:1;395:15;433:4;430:1;423:15;304:144;457:25;;;146:342;:::o;883:270::-;956:6;1009:2;997:9;988:7;984:23;980:32;977:52;;;1025:1;1022;1015:12;977:52;1064:9;1051:23;1103:1;1096:5;1093:12;1083:40;;1119:1;1116;1109:12;1083:40;1142:5;883:270;-1:-1:-1;;;883:270:6:o;1158:286::-;1217:6;1270:2;1258:9;1249:7;1245:23;1241:32;1238:52;;;1286:1;1283;1276:12;1238:52;1312:23;;-1:-1:-1;;;;;1364:31:6;;1354:42;;1344:70;;1410:1;1407;1400:12;1449:404;1651:2;1633:21;;;1690:2;1670:18;;;1663:30;1729:34;1724:2;1709:18;;1702:62;-1:-1:-1;;;1795:2:6;1780:18;;1773:38;1843:3;1828:19;;1449:404::o;2202:222::-;2267:9;;;2288:10;;;2285:133;;;2340:10;2335:3;2331:20;2328:1;2321:31;2375:4;2372:1;2365:15;2403:4;2400:1;2393:15;2285:133;2202:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract CryptoWalletInsurance is ReentrancyGuard, Ownable {\n    address public insured;\n    uint256 public price;\n    uint256 public coverageAmount;\n    uint256 public lastPaid;\n\n    enum PolicyType { Basic, Premium }\n    PolicyType public policy; \n\n    event PricePaid(address indexed user, uint256 amount);\n    event Claimed(address indexed user, uint256 amount);\n    event PolicyChanged(PolicyType newPolicy);\n\n    modifier onlyInsured() {\n        require(msg.sender == insured, \"Only the insured can perform this action\");\n        _;\n    }\n\n    constructor(address _insured) Ownable(_insured) {\n        insured = _insured;\n    }\n\n    function getInsured() public view returns (address) {\n        return insured;\n    }\n\n    function setPolicy(PolicyType _policy) public onlyInsured {\n        policy = _policy;\n        if (policy == PolicyType.Basic) {\n            price = 0.001 ether;\n            coverageAmount = 0.02 ether;\n        } else if (policy == PolicyType.Premium) {\n            price = 0.025 ether;\n            coverageAmount = 0.05 ether;\n        }\n        emit PolicyChanged(policy);\n    }\n\n    function payPrice() public payable onlyInsured nonReentrant {\n        require(msg.value == price, \"Incorrect price\");\n        lastPaid = block.timestamp;\n        emit PricePaid(msg.sender, msg.value);\n    }\n\n    function claim() public onlyInsured nonReentrant {\n        require(block.timestamp <= lastPaid + 30 days, \"Policy expired\");\n        payable(insured).transfer(coverageAmount);\n        emit Claimed(insured, coverageAmount);\n    }\n\n    receive() external payable {}\n}\n",
  "sourcePath": "/home/sourav/programming/MetaCrafter/eth-advanced/2. Insurance/contracts/Wallet.sol",
  "ast": {
    "absolutePath": "project:/contracts/Wallet.sol",
    "exportedSymbols": {
      "Context": [
        177
      ],
      "CryptoWalletInsurance": [
        691
      ],
      "Ownable": [
        147
      ],
      "ReentrancyGuard": [
        246
      ]
    },
    "id": 692,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 512,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 692,
        "sourceUnit": 148,
        "src": "58:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 692,
        "sourceUnit": 247,
        "src": "111:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 515,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "206:15:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 246,
              "src": "206:15:5"
            },
            "id": 516,
            "nodeType": "InheritanceSpecifier",
            "src": "206:15:5"
          },
          {
            "baseName": {
              "id": 517,
              "name": "Ownable",
              "nameLocations": [
                "223:7:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "223:7:5"
            },
            "id": 518,
            "nodeType": "InheritanceSpecifier",
            "src": "223:7:5"
          }
        ],
        "canonicalName": "CryptoWalletInsurance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 691,
        "linearizedBaseContracts": [
          691,
          147,
          177,
          246
        ],
        "name": "CryptoWalletInsurance",
        "nameLocation": "181:21:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "eebb1363",
            "id": 520,
            "mutability": "mutable",
            "name": "insured",
            "nameLocation": "252:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 691,
            "src": "237:22:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 519,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "237:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 522,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "280:5:5",
            "nodeType": "VariableDeclaration",
            "scope": 691,
            "src": "265:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 521,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "265:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "67c0d00f",
            "id": 524,
            "mutability": "mutable",
            "name": "coverageAmount",
            "nameLocation": "306:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 691,
            "src": "291:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 523,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "291:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c4b8db46",
            "id": 526,
            "mutability": "mutable",
            "name": "lastPaid",
            "nameLocation": "341:8:5",
            "nodeType": "VariableDeclaration",
            "scope": 691,
            "src": "326:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 525,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "326:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoWalletInsurance.PolicyType",
            "id": 529,
            "members": [
              {
                "id": 527,
                "name": "Basic",
                "nameLocation": "374:5:5",
                "nodeType": "EnumValue",
                "src": "374:5:5"
              },
              {
                "id": 528,
                "name": "Premium",
                "nameLocation": "381:7:5",
                "nodeType": "EnumValue",
                "src": "381:7:5"
              }
            ],
            "name": "PolicyType",
            "nameLocation": "361:10:5",
            "nodeType": "EnumDefinition",
            "src": "356:34:5"
          },
          {
            "constant": false,
            "functionSelector": "0505c8c9",
            "id": 532,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "413:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 691,
            "src": "395:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyType_$529",
              "typeString": "enum CryptoWalletInsurance.PolicyType"
            },
            "typeName": {
              "id": 531,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 530,
                "name": "PolicyType",
                "nameLocations": [
                  "395:10:5"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 529,
                "src": "395:10:5"
              },
              "referencedDeclaration": 529,
              "src": "395:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyType_$529",
                "typeString": "enum CryptoWalletInsurance.PolicyType"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "fbb78d90c03ede71a52f887ed761d6178e310a2c426206ba0dc64a01691e16f1",
            "id": 538,
            "name": "PricePaid",
            "nameLocation": "433:9:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "459:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "443:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "473:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 538,
                  "src": "465:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "465:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "442:38:5"
            },
            "src": "427:54:5"
          },
          {
            "anonymous": false,
            "eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
            "id": 544,
            "name": "Claimed",
            "nameLocation": "492:7:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 540,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "516:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "500:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 539,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 542,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "530:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "522:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 541,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "522:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "499:38:5"
            },
            "src": "486:52:5"
          },
          {
            "anonymous": false,
            "eventSelector": "72a13a5c6bbfd98d3dc4719b767656873b3c13c3139cb44ab7d3002250ba63da",
            "id": 549,
            "name": "PolicyChanged",
            "nameLocation": "549:13:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 547,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPolicy",
                  "nameLocation": "574:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "563:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyType_$529",
                    "typeString": "enum CryptoWalletInsurance.PolicyType"
                  },
                  "typeName": {
                    "id": 546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 545,
                      "name": "PolicyType",
                      "nameLocations": [
                        "563:10:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 529,
                      "src": "563:10:5"
                    },
                    "referencedDeclaration": 529,
                    "src": "563:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyType_$529",
                      "typeString": "enum CryptoWalletInsurance.PolicyType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:22:5"
            },
            "src": "543:42:5"
          },
          {
            "body": {
              "id": 560,
              "nodeType": "Block",
              "src": "614:102:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 552,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "632:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "636:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "632:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 554,
                          "name": "insured",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "646:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "632:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520696e73757265642063616e20706572666f726d207468697320616374696f6e",
                        "id": 556,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "655:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b",
                          "typeString": "literal_string \"Only the insured can perform this action\""
                        },
                        "value": "Only the insured can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b",
                          "typeString": "literal_string \"Only the insured can perform this action\""
                        }
                      ],
                      "id": 551,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "624:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "624:74:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 558,
                  "nodeType": "ExpressionStatement",
                  "src": "624:74:5"
                },
                {
                  "id": 559,
                  "nodeType": "PlaceholderStatement",
                  "src": "708:1:5"
                }
              ]
            },
            "id": 561,
            "name": "onlyInsured",
            "nameLocation": "600:11:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:5"
            },
            "src": "591:125:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "770:35:5",
              "statements": [
                {
                  "expression": {
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 569,
                      "name": "insured",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 520,
                      "src": "780:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 570,
                      "name": "_insured",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 563,
                      "src": "790:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "780:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "780:18:5"
                }
              ]
            },
            "id": 574,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 566,
                    "name": "_insured",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 563,
                    "src": "760:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 567,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 565,
                  "name": "Ownable",
                  "nameLocations": [
                    "752:7:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "752:7:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "752:17:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 563,
                  "mutability": "mutable",
                  "name": "_insured",
                  "nameLocation": "742:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "734:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "733:18:5"
            },
            "returnParameters": {
              "id": 568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "770:0:5"
            },
            "scope": 691,
            "src": "722:83:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 581,
              "nodeType": "Block",
              "src": "863:31:5",
              "statements": [
                {
                  "expression": {
                    "id": 579,
                    "name": "insured",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 520,
                    "src": "880:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 578,
                  "id": 580,
                  "nodeType": "Return",
                  "src": "873:14:5"
                }
              ]
            },
            "functionSelector": "4cbc03d9",
            "id": 582,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getInsured",
            "nameLocation": "820:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "830:2:5"
            },
            "returnParameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 582,
                  "src": "854:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "854:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "853:9:5"
            },
            "scope": 691,
            "src": "811:83:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "958:320:5",
              "statements": [
                {
                  "expression": {
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 590,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "968:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$529",
                        "typeString": "enum CryptoWalletInsurance.PolicyType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 591,
                      "name": "_policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 585,
                      "src": "977:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$529",
                        "typeString": "enum CryptoWalletInsurance.PolicyType"
                      }
                    },
                    "src": "968:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyType_$529",
                      "typeString": "enum CryptoWalletInsurance.PolicyType"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "968:16:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PolicyType_$529",
                      "typeString": "enum CryptoWalletInsurance.PolicyType"
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 594,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "998:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$529",
                        "typeString": "enum CryptoWalletInsurance.PolicyType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 595,
                        "name": "PolicyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "1008:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyType_$529_$",
                          "typeString": "type(enum CryptoWalletInsurance.PolicyType)"
                        }
                      },
                      "id": 596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1019:5:5",
                      "memberName": "Basic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 527,
                      "src": "1008:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$529",
                        "typeString": "enum CryptoWalletInsurance.PolicyType"
                      }
                    },
                    "src": "998:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PolicyType_$529",
                        "typeString": "enum CryptoWalletInsurance.PolicyType"
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 607,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "1121:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyType_$529",
                          "typeString": "enum CryptoWalletInsurance.PolicyType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 608,
                          "name": "PolicyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "1131:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PolicyType_$529_$",
                            "typeString": "type(enum CryptoWalletInsurance.PolicyType)"
                          }
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1142:7:5",
                        "memberName": "Premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 528,
                        "src": "1131:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyType_$529",
                          "typeString": "enum CryptoWalletInsurance.PolicyType"
                        }
                      },
                      "src": "1121:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 620,
                    "nodeType": "IfStatement",
                    "src": "1117:119:5",
                    "trueBody": {
                      "id": 619,
                      "nodeType": "Block",
                      "src": "1151:85:5",
                      "statements": [
                        {
                          "expression": {
                            "id": 613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 611,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 522,
                              "src": "1165:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "302e303235",
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1173:11:5",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25000000000000000_by_1",
                                "typeString": "int_const 25000000000000000"
                              },
                              "value": "0.025"
                            },
                            "src": "1165:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 614,
                          "nodeType": "ExpressionStatement",
                          "src": "1165:19:5"
                        },
                        {
                          "expression": {
                            "id": 617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 615,
                              "name": "coverageAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 524,
                              "src": "1198:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "302e3035",
                              "id": 616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1215:10:5",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "0.05"
                            },
                            "src": "1198:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 618,
                          "nodeType": "ExpressionStatement",
                          "src": "1198:27:5"
                        }
                      ]
                    }
                  },
                  "id": 621,
                  "nodeType": "IfStatement",
                  "src": "994:242:5",
                  "trueBody": {
                    "id": 606,
                    "nodeType": "Block",
                    "src": "1026:85:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 598,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "1040:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "302e303031",
                            "id": 599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1048:11:5",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            "value": "0.001"
                          },
                          "src": "1040:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 601,
                        "nodeType": "ExpressionStatement",
                        "src": "1040:19:5"
                      },
                      {
                        "expression": {
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 602,
                            "name": "coverageAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 524,
                            "src": "1073:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "302e3032",
                            "id": 603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1090:10:5",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000000000000000_by_1",
                              "typeString": "int_const 20000000000000000"
                            },
                            "value": "0.02"
                          },
                          "src": "1073:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 605,
                        "nodeType": "ExpressionStatement",
                        "src": "1073:27:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 623,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 532,
                        "src": "1264:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyType_$529",
                          "typeString": "enum CryptoWalletInsurance.PolicyType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PolicyType_$529",
                          "typeString": "enum CryptoWalletInsurance.PolicyType"
                        }
                      ],
                      "id": 622,
                      "name": "PolicyChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 549,
                      "src": "1250:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_PolicyType_$529_$returns$__$",
                        "typeString": "function (enum CryptoWalletInsurance.PolicyType)"
                      }
                    },
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1250:21:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 625,
                  "nodeType": "EmitStatement",
                  "src": "1245:26:5"
                }
              ]
            },
            "functionSelector": "74bce0bc",
            "id": 627,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 587,
                  "name": "onlyInsured",
                  "nameLocations": [
                    "946:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 561,
                  "src": "946:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "946:11:5"
              }
            ],
            "name": "setPolicy",
            "nameLocation": "909:9:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "930:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 627,
                  "src": "919:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyType_$529",
                    "typeString": "enum CryptoWalletInsurance.PolicyType"
                  },
                  "typeName": {
                    "id": 584,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 583,
                      "name": "PolicyType",
                      "nameLocations": [
                        "919:10:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 529,
                      "src": "919:10:5"
                    },
                    "referencedDeclaration": 529,
                    "src": "919:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyType_$529",
                      "typeString": "enum CryptoWalletInsurance.PolicyType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "918:20:5"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:0:5"
            },
            "scope": 691,
            "src": "900:378:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "1344:146:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 635,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1362:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1366:5:5",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1362:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 637,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1375:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1362:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207072696365",
                        "id": 639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1382:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149",
                          "typeString": "literal_string \"Incorrect price\""
                        },
                        "value": "Incorrect price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149",
                          "typeString": "literal_string \"Incorrect price\""
                        }
                      ],
                      "id": 634,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1354:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1354:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 641,
                  "nodeType": "ExpressionStatement",
                  "src": "1354:46:5"
                },
                {
                  "expression": {
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 642,
                      "name": "lastPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 526,
                      "src": "1410:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 643,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1421:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1427:9:5",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1421:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1410:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "1410:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 648,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1461:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1465:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1461:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 650,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1473:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1477:5:5",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1473:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 647,
                      "name": "PricePaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 538,
                      "src": "1451:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1451:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "1446:37:5"
                }
              ]
            },
            "functionSelector": "4ce115d8",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 630,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 629,
                  "name": "onlyInsured",
                  "nameLocations": [
                    "1319:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 561,
                  "src": "1319:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1319:11:5"
              },
              {
                "id": 632,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 631,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1331:12:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "1331:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1331:12:5"
              }
            ],
            "name": "payPrice",
            "nameLocation": "1293:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1301:2:5"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1344:0:5"
            },
            "scope": 691,
            "src": "1284:206:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "1545:179:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 663,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1563:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1569:9:5",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1563:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 665,
                            "name": "lastPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "1582:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1593:7:5",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "1582:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1563:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c6963792065787069726564",
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                          "typeString": "literal_string \"Policy expired\""
                        },
                        "value": "Policy expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                          "typeString": "literal_string \"Policy expired\""
                        }
                      ],
                      "id": 662,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1555:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1555:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:64:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 677,
                        "name": "coverageAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1655:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 674,
                            "name": "insured",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "1637:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1629:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 672,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1629:8:5",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1629:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 676,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1646:8:5",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1629:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:41:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 679,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:41:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 681,
                        "name": "insured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "1693:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 682,
                        "name": "coverageAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 524,
                        "src": "1702:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 680,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 544,
                      "src": "1685:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 684,
                  "nodeType": "EmitStatement",
                  "src": "1680:37:5"
                }
              ]
            },
            "functionSelector": "4e71d92d",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 657,
                  "name": "onlyInsured",
                  "nameLocations": [
                    "1520:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 561,
                  "src": "1520:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1520:11:5"
              },
              {
                "id": 660,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 659,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1532:12:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "1532:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1532:12:5"
              }
            ],
            "name": "claim",
            "nameLocation": "1505:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1510:2:5"
            },
            "returnParameters": {
              "id": 661,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1545:0:5"
            },
            "scope": 691,
            "src": "1496:228:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 689,
              "nodeType": "Block",
              "src": "1757:2:5",
              "statements": []
            },
            "id": 690,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1737:2:5"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1757:0:5"
            },
            "scope": 691,
            "src": "1730:29:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 692,
        "src": "172:1589:5",
        "usedErrors": [
          13,
          18,
          191
        ],
        "usedEvents": [
          24,
          538,
          544,
          549
        ]
      }
    ],
    "src": "32:1730:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-17T10:35:57.258Z",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}