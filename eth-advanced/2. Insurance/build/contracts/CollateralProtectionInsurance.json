{
  "contractName": "CollateralProtectionInsurance",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_insured",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum CollateralProtectionInsurance.PolicyType",
          "name": "newPolicy",
          "type": "uint8"
        }
      ],
      "name": "PolicyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PricePaid",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "coverageAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "insured",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastPaid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "policy",
      "outputs": [
        {
          "internalType": "enum CollateralProtectionInsurance.PolicyType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "enum CollateralProtectionInsurance.PolicyType",
          "name": "_policy",
          "type": "uint8"
        }
      ],
      "name": "setPolicy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payPrice",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_insured\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum CollateralProtectionInsurance.PolicyType\",\"name\":\"newPolicy\",\"type\":\"uint8\"}],\"name\":\"PolicyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PricePaid\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"coverageAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insured\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payPrice\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"policy\",\"outputs\":[{\"internalType\":\"enum CollateralProtectionInsurance.PolicyType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum CollateralProtectionInsurance.PolicyType\",\"name\":\"_policy\",\"type\":\"uint8\"}],\"name\":\"setPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Collateral.sol\":\"CollateralProtectionInsurance\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"project:/contracts/Collateral.sol\":{\"keccak256\":\"0x5df3ae1b1a6d59ecfe256edbdaba74251c790b5e23c8d101c445e8af5e155da4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40421bc1050fd1b79e9d672eac853a1021c2062d50f6b1875020627bfe14aaa2\",\"dweb:/ipfs/QmR6Liz4aJ9s2AyMzegKjWvnqMjLaduYGTM5jy3tKEP5Ct\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b5060405161085138038061085183398101604081905261002e916100e0565b60015f55806001600160a01b03811661006057604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100698161008f565b50600280546001600160a01b0319166001600160a01b039290921691909117905561010d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f602082840312156100f0575f80fd5b81516001600160a01b0381168114610106575f80fd5b9392505050565b6107378061011a5f395ff3fe60806040526004361061009d575f3560e01c806374bce0bc1161006257806374bce0bc146101375780638da5cb5b14610156578063a035b1fe14610187578063c4b8db461461019c578063eebb1363146101b1578063f2fde38b146101d0575f80fd5b80630505c8c9146100a8578063379607f5146100d75780634ce115d8146100f857806367c0d00f14610100578063715018a614610123575f80fd5b366100a457005b5f80fd5b3480156100b3575f80fd5b506006546100c19060ff1681565b6040516100ce919061060c565b60405180910390f35b3480156100e2575f80fd5b506100f66100f1366004610632565b6101ef565b005b6100f6610352565b34801561010b575f80fd5b5061011560045481565b6040519081526020016100ce565b34801561012e575f80fd5b506100f661040b565b348015610142575f80fd5b506100f6610151366004610649565b61041c565b348015610161575f80fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016100ce565b348015610192575f80fd5b5061011560035481565b3480156101a7575f80fd5b5061011560055481565b3480156101bc575f80fd5b5060025461016f906001600160a01b031681565b3480156101db575f80fd5b506100f66101ea36600461066e565b610518565b6002546001600160a01b031633146102225760405162461bcd60e51b815260040161021990610694565b60405180910390fd5b61022a610552565b60055461023a9062278d006106dc565b42111561027a5760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606401610219565b6004548111156102cc5760405162461bcd60e51b815260206004820152601c60248201527f4c6f616e20616d6f756e74206578636565647320636f766572616765000000006044820152606401610219565b6002546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610303573d5f803e3d5ffd5b506002546040518281526001600160a01b03909116907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a261034f60015f55565b50565b6002546001600160a01b0316331461037c5760405162461bcd60e51b815260040161021990610694565b610384610552565b60035434146103c75760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420707269636560881b6044820152606401610219565b4260055560405134815233907ffbb78d90c03ede71a52f887ed761d6178e310a2c426206ba0dc64a01691e16f19060200160405180910390a261040960015f55565b565b61041361057a565b6104095f6105a7565b6002546001600160a01b031633146104465760405162461bcd60e51b815260040161021990610694565b6006805482919060ff191660018381811115610464576104646105f8565b02179055505f60065460ff166001811115610481576104816105f8565b036104a15766038d7ea4c6800060035566470de4df8200006004556104d6565b600160065460ff1660018111156104ba576104ba6105f8565b036104d6576658d15e1762800060035566b1a2bc2ec500006004555b6006546040517f72a13a5c6bbfd98d3dc4719b767656873b3c13c3139cb44ab7d3002250ba63da9161050d9160ff9091169061060c565b60405180910390a150565b61052061057a565b6001600160a01b03811661054957604051631e4fbdf760e01b81525f6004820152602401610219565b61034f816105a7565b60025f540361057457604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6001546001600160a01b031633146104095760405163118cdaa760e01b8152336004820152602401610219565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061062c57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215610642575f80fd5b5035919050565b5f60208284031215610659575f80fd5b813560028110610667575f80fd5b9392505050565b5f6020828403121561067e575f80fd5b81356001600160a01b0381168114610667575f80fd5b60208082526028908201527f4f6e6c792074686520696e73757265642063616e20706572666f726d20746869604082015267399030b1ba34b7b760c11b606082015260800190565b808201808211156106fb57634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358221220a3b807b918a383ed9ad48286f8e340500d372d647b0d1841d0f0d6b3d1e2374b64736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061009d575f3560e01c806374bce0bc1161006257806374bce0bc146101375780638da5cb5b14610156578063a035b1fe14610187578063c4b8db461461019c578063eebb1363146101b1578063f2fde38b146101d0575f80fd5b80630505c8c9146100a8578063379607f5146100d75780634ce115d8146100f857806367c0d00f14610100578063715018a614610123575f80fd5b366100a457005b5f80fd5b3480156100b3575f80fd5b506006546100c19060ff1681565b6040516100ce919061060c565b60405180910390f35b3480156100e2575f80fd5b506100f66100f1366004610632565b6101ef565b005b6100f6610352565b34801561010b575f80fd5b5061011560045481565b6040519081526020016100ce565b34801561012e575f80fd5b506100f661040b565b348015610142575f80fd5b506100f6610151366004610649565b61041c565b348015610161575f80fd5b506001546001600160a01b03165b6040516001600160a01b0390911681526020016100ce565b348015610192575f80fd5b5061011560035481565b3480156101a7575f80fd5b5061011560055481565b3480156101bc575f80fd5b5060025461016f906001600160a01b031681565b3480156101db575f80fd5b506100f66101ea36600461066e565b610518565b6002546001600160a01b031633146102225760405162461bcd60e51b815260040161021990610694565b60405180910390fd5b61022a610552565b60055461023a9062278d006106dc565b42111561027a5760405162461bcd60e51b815260206004820152600e60248201526d141bdb1a58de48195e1c1a5c995960921b6044820152606401610219565b6004548111156102cc5760405162461bcd60e51b815260206004820152601c60248201527f4c6f616e20616d6f756e74206578636565647320636f766572616765000000006044820152606401610219565b6002546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610303573d5f803e3d5ffd5b506002546040518281526001600160a01b03909116907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a261034f60015f55565b50565b6002546001600160a01b0316331461037c5760405162461bcd60e51b815260040161021990610694565b610384610552565b60035434146103c75760405162461bcd60e51b815260206004820152600f60248201526e496e636f727265637420707269636560881b6044820152606401610219565b4260055560405134815233907ffbb78d90c03ede71a52f887ed761d6178e310a2c426206ba0dc64a01691e16f19060200160405180910390a261040960015f55565b565b61041361057a565b6104095f6105a7565b6002546001600160a01b031633146104465760405162461bcd60e51b815260040161021990610694565b6006805482919060ff191660018381811115610464576104646105f8565b02179055505f60065460ff166001811115610481576104816105f8565b036104a15766038d7ea4c6800060035566470de4df8200006004556104d6565b600160065460ff1660018111156104ba576104ba6105f8565b036104d6576658d15e1762800060035566b1a2bc2ec500006004555b6006546040517f72a13a5c6bbfd98d3dc4719b767656873b3c13c3139cb44ab7d3002250ba63da9161050d9160ff9091169061060c565b60405180910390a150565b61052061057a565b6001600160a01b03811661054957604051631e4fbdf760e01b81525f6004820152602401610219565b61034f816105a7565b60025f540361057457604051633ee5aeb560e01b815260040160405180910390fd5b60025f55565b6001546001600160a01b031633146104095760405163118cdaa760e01b8152336004820152602401610219565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061062c57634e487b7160e01b5f52602160045260245ffd5b91905290565b5f60208284031215610642575f80fd5b5035919050565b5f60208284031215610659575f80fd5b813560028110610667575f80fd5b9392505050565b5f6020828403121561067e575f80fd5b81356001600160a01b0381168114610667575f80fd5b60208082526028908201527f4f6e6c792074686520696e73757265642063616e20706572666f726d20746869604082015267399030b1ba34b7b760c11b606082015260800190565b808201808211156106fb57634e487b7160e01b5f52601160045260245ffd5b9291505056fea2646970667358221220a3b807b918a383ed9ad48286f8e340500d372d647b0d1841d0f0d6b3d1e2374b64736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:514:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:6",
                "type": ""
              }
            ],
            "src": "14:290:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "410:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "420:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "432:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "443:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "428:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "420:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "462:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "477:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "493:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "498:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "489:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "489:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "502:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "485:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "485:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "473:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "473:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "455:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "455:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "455:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "379:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "390:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "401:4:6",
                "type": ""
              }
            ],
            "src": "309:203:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3311:6",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:6",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:6",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:6",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:6",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:6"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "259:229:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "269:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "281:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "292:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "277:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "277:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "269:4:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "337:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "358:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "365:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "370:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "361:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "361:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "351:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "351:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "351:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "402:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "405:4:6",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "395:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "395:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "395:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "317:6:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "325:1:6",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "314:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "314:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "307:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:21:6"
                  },
                  "nodeType": "YulIf",
                  "src": "304:144:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "464:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "475:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "457:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_PolicyType_$265__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "239:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "250:4:6",
                "type": ""
              }
            ],
            "src": "146:342:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "563:110:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "609:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "618:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "621:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "611:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "611:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "611:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "584:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "593:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "580:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "580:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "605:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "576:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "576:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "573:52:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "657:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "644:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:23:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "529:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "540:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "552:6:6",
                "type": ""
              }
            ],
            "src": "493:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "779:76:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "789:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "801:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "812:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "797:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "797:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "789:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "831:9:6"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "842:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "824:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "824:25:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "824:25:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "748:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "759:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "770:4:6",
                "type": ""
              }
            ],
            "src": "678:177:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "944:186:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "990:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "999:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1002:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "992:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "992:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "992:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "965:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "961:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "986:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "957:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "954:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1015:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1041:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1028:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1028:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1019:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1084:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1093:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1096:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1086:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1086:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1086:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1073:5:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1080:1:6",
                            "type": "",
                            "value": "2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1070:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:12:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1063:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1063:20:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1060:40:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1109:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1119:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1109:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_enum$_PolicyType_$265",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "910:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "921:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "933:6:6",
                "type": ""
              }
            ],
            "src": "860:270:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1236:102:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1246:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1258:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1269:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1254:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1254:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1246:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1288:9:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1303:6:6"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1319:3:6",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1324:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1315:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1315:11:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1328:1:6",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1311:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1311:19:6"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1299:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1299:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1281:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1281:51:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1281:51:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1205:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1216:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1227:4:6",
                "type": ""
              }
            ],
            "src": "1135:203:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1413:216:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1459:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1468:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1471:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1461:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1461:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1461:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1434:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1443:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1430:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1430:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1455:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1426:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1426:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1423:52:6"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1484:36:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1510:9:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1497:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1497:23:6"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1488:5:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1583:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1592:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1595:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1585:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1585:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1585:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1542:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1553:5:6"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1568:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1573:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1564:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1564:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1577:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1560:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1560:19:6"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1549:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1549:31:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1539:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1539:42:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1532:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1532:50:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1529:70:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1608:15:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1618:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1608:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1379:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1390:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1402:6:6",
                "type": ""
              }
            ],
            "src": "1343:286:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1808:230:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1825:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1836:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1818:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1818:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1818:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1859:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1870:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1855:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1855:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1875:2:6",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1848:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1848:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1848:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1898:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1909:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1894:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1894:18:6"
                      },
                      {
                        "hexValue": "4f6e6c792074686520696e73757265642063616e20706572666f726d20746869",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1914:34:6",
                        "type": "",
                        "value": "Only the insured can perform thi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1887:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1887:62:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1887:62:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1969:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1980:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1965:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1965:18:6"
                      },
                      {
                        "hexValue": "7320616374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1985:10:6",
                        "type": "",
                        "value": "s action"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1958:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1958:38:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1958:38:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2005:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2017:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2028:3:6",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2013:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2013:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2005:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1785:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1799:4:6",
                "type": ""
              }
            ],
            "src": "1634:404:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2091:174:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2101:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2112:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2115:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2108:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2108:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2101:3:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2148:111:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2169:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2176:3:6",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2181:10:6",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2172:3:6"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2172:20:6"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2162:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2162:31:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2162:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2213:1:6",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2216:4:6",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2206:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2206:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2206:15:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2241:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2244:4:6",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2234:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2234:15:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2234:15:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2132:1:6"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "2135:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2129:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2129:10:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2126:133:6"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2074:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2077:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2083:3:6",
                "type": ""
              }
            ],
            "src": "2043:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2444:164:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2461:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2472:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2454:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2454:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2454:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2495:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2506:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2491:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2491:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2511:2:6",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2484:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2484:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2534:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2545:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2530:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2530:18:6"
                      },
                      {
                        "hexValue": "506f6c6963792065787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2550:16:6",
                        "type": "",
                        "value": "Policy expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2523:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2523:44:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2523:44:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2576:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2588:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2599:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2584:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2584:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2576:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2421:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2435:4:6",
                "type": ""
              }
            ],
            "src": "2270:338:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2787:178:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2804:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2815:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2797:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2797:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2797:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2838:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2849:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2834:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2834:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2854:2:6",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2827:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2827:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2827:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2877:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2888:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2873:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2873:18:6"
                      },
                      {
                        "hexValue": "4c6f616e20616d6f756e74206578636565647320636f766572616765",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2893:30:6",
                        "type": "",
                        "value": "Loan amount exceeds coverage"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2866:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2866:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2866:58:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2933:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2945:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2956:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2941:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2941:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2933:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_93436cf49480a39c0d4ce2bfff553538d37b8862e346ee88ad925a4fbd7db844__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2764:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2778:4:6",
                "type": ""
              }
            ],
            "src": "2613:352:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3144:165:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3161:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3172:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3154:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3154:21:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3154:21:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3195:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3206:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3191:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3191:18:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3211:2:6",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3184:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3184:30:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3234:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3245:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3230:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3230:18:6"
                      },
                      {
                        "hexValue": "496e636f7272656374207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3250:17:6",
                        "type": "",
                        "value": "Incorrect price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3223:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:45:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3277:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3289:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3300:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3285:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3285:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3277:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3121:9:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3135:4:6",
                "type": ""
              }
            ],
            "src": "2970:339:6"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_PolicyType_$265__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_enum$_PolicyType_$265(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 2)) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Only the insured can perform thi\")\n        mstore(add(headStart, 96), \"s action\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Policy expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93436cf49480a39c0d4ce2bfff553538d37b8862e346ee88ad925a4fbd7db844__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Loan amount exceeds coverage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Incorrect price\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "172:1595:3:-:0;;;728:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1713:1:2;1917:7;:21;766:8:3;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:6;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;786:7:3::1;:18:::0;;-1:-1:-1;;;;;;786:18:3::1;-1:-1:-1::0;;;;;786:18:3;;;::::1;::::0;;;::::1;::::0;;172:1595;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:290:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:6;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:6:o;309:203::-;172:1595:3;;;;;;",
  "deployedSourceMap": "172:1595:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:24;;;;;;;;;;-1:-1:-1;403:24:3;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1413:317;;;;;;;;;;-1:-1:-1;1413:317:3;;;;;:::i;:::-;;:::i;:::-;;1201:206;;;:::i;299:29::-;;;;;;;;;;;;;;;;;;;824:25:6;;;812:2;797:18;299:29:3;678:177:6;2293:101:0;;;;;;;;;;;;;:::i;817:378:3:-;;;;;;;;;;-1:-1:-1;817:378:3;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1299:32:6;;;1281:51;;1269:2;1254:18;1638:85:0;1135:203:6;273:20:3;;;;;;;;;;;;;;;;334:23;;;;;;;;;;;;;;;;245:22;;;;;;;;;;-1:-1:-1;245:22:3;;;;-1:-1:-1;;;;;245:22:3;;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;1413:317:3:-;652:7;;-1:-1:-1;;;;;652:7:3;638:10;:21;630:74;;;;-1:-1:-1;;;630:74:3;;;;;;;:::i;:::-;;;;;;;;;2356:21:2::1;:19;:21::i;:::-;1517:8:3::2;::::0;:18:::2;::::0;1528:7:::2;1517:18;:::i;:::-;1498:15;:37;;1490:64;;;::::0;-1:-1:-1;;;1490:64:3;;2472:2:6;1490:64:3::2;::::0;::::2;2454:21:6::0;2511:2;2491:18;;;2484:30;-1:-1:-1;;;2530:18:6;;;2523:44;2584:18;;1490:64:3::2;2270:338:6::0;1490:64:3::2;1586:14;;1572:10;:28;;1564:69;;;::::0;-1:-1:-1;;;1564:69:3;;2815:2:6;1564:69:3::2;::::0;::::2;2797:21:6::0;2854:2;2834:18;;;2827:30;2893;2873:18;;;2866:58;2941:18;;1564:69:3::2;2613:352:6::0;1564:69:3::2;1651:7;::::0;1643:37:::2;::::0;-1:-1:-1;;;;;1651:7:3;;::::2;::::0;1643:37;::::2;;;::::0;1669:10;;1651:7:::2;1643:37:::0;1651:7;1643:37;1669:10;1651:7;1643:37;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1703:7:3::2;::::0;1695:28:::2;::::0;824:25:6;;;-1:-1:-1;;;;;1703:7:3;;::::2;::::0;1695:28:::2;::::0;812:2:6;797:18;1695:28:3::2;;;;;;;2398:20:2::1;1713:1:::0;2924:7;:21;2744:208;2398:20:::1;1413:317:3::0;:::o;1201:206::-;652:7;;-1:-1:-1;;;;;652:7:3;638:10;:21;630:74;;;;-1:-1:-1;;;630:74:3;;;;;;;:::i;:::-;2356:21:2::1;:19;:21::i;:::-;1292:5:3::2;;1279:9;:18;1271:46;;;::::0;-1:-1:-1;;;1271:46:3;;3172:2:6;1271:46:3::2;::::0;::::2;3154:21:6::0;3211:2;3191:18;;;3184:30;-1:-1:-1;;;3230:18:6;;;3223:45;3285:18;;1271:46:3::2;2970:339:6::0;1271:46:3::2;1338:15;1327:8;:26:::0;1368:32:::2;::::0;1390:9:::2;824:25:6::0;;1378:10:3::2;::::0;1368:32:::2;::::0;812:2:6;797:18;1368:32:3::2;;;;;;;2398:20:2::1;1713:1:::0;2924:7;:21;2744:208;2398:20:::1;1201:206:3:o:0;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;817:378:3:-:0;652:7;;-1:-1:-1;;;;;652:7:3;638:10;:21;630:74;;;;-1:-1:-1;;;630:74:3;;;;;;;:::i;:::-;885:6:::1;:16:::0;;894:7;;885:6;-1:-1:-1;;885:16:3::1;::::0;894:7;885:16;;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;925:16:3::1;915:6;::::0;::::1;;::::0;:26;::::1;;;;;;:::i;:::-;::::0;911:242:::1;;965:11;957:5;:19:::0;1007:10:::1;990:14;:27:::0;911:242:::1;;;1048:18;1038:6;::::0;::::1;;::::0;:28;::::1;;;;;;:::i;:::-;::::0;1034:119:::1;;1090:11;1082:5;:19:::0;1132:10:::1;1115:14;:27:::0;1034:119:::1;1181:6;::::0;1167:21:::1;::::0;::::1;::::0;::::1;::::0;1181:6:::1;::::0;;::::1;::::0;1167:21:::1;:::i;:::-;;;;;;;;817:378:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1281:51:6::0;1254:18;;2672:31:0::1;1135:203:6::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;2431:307:2:-:0;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:2;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:1;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:1;1901:40:0;;;1281:51:6;1254:18;;1901:40:0;1135:203:6;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:342;292:2;277:18;;325:1;314:13;;304:144;;370:10;365:3;361:20;358:1;351:31;405:4;402:1;395:15;433:4;430:1;423:15;304:144;457:25;;;146:342;:::o;493:180::-;552:6;605:2;593:9;584:7;580:23;576:32;573:52;;;621:1;618;611:12;573:52;-1:-1:-1;644:23:6;;493:180;-1:-1:-1;493:180:6:o;860:270::-;933:6;986:2;974:9;965:7;961:23;957:32;954:52;;;1002:1;999;992:12;954:52;1041:9;1028:23;1080:1;1073:5;1070:12;1060:40;;1096:1;1093;1086:12;1060:40;1119:5;860:270;-1:-1:-1;;;860:270:6:o;1343:286::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;1497:23;;-1:-1:-1;;;;;1549:31:6;;1539:42;;1529:70;;1595:1;1592;1585:12;1634:404;1836:2;1818:21;;;1875:2;1855:18;;;1848:30;1914:34;1909:2;1894:18;;1887:62;-1:-1:-1;;;1980:2:6;1965:18;;1958:38;2028:3;2013:19;;1634:404::o;2043:222::-;2108:9;;;2129:10;;;2126:133;;;2181:10;2176:3;2172:20;2169:1;2162:31;2216:4;2213:1;2206:15;2244:4;2241:1;2234:15;2126:133;2043:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract CollateralProtectionInsurance is ReentrancyGuard, Ownable {\n    address public insured;\n    uint256 public price;\n    uint256 public coverageAmount;\n    uint256 public lastPaid;\n\n    enum PolicyType { Basic, Premium }\n    PolicyType public policy;\n    event PricePaid(address indexed user, uint256 amount);\n    event Claimed(address indexed user, uint256 amount);\n    event PolicyChanged(PolicyType newPolicy);\n\n    modifier onlyInsured() {\n        require(msg.sender == insured, \"Only the insured can perform this action\");\n        _;\n    }\n\n    constructor(address _insured) Ownable(_insured) {\n        insured = _insured;\n    }\n\n    function setPolicy(PolicyType _policy) public onlyInsured {\n        policy = _policy;\n        if (policy == PolicyType.Basic) {\n            price = 0.001 ether;\n            coverageAmount = 0.02 ether;\n        } else if (policy == PolicyType.Premium) {\n            price = 0.025 ether;\n            coverageAmount = 0.05 ether;\n        }\n        emit PolicyChanged(policy);\n    }\n\n    function payPrice() public payable onlyInsured nonReentrant {\n        require(msg.value == price, \"Incorrect price\");\n        lastPaid = block.timestamp;\n        emit PricePaid(msg.sender, msg.value);\n    }\n\n    function claim(uint256 loanAmount) public onlyInsured nonReentrant {\n        require(block.timestamp <= lastPaid + 30 days, \"Policy expired\");\n        require(loanAmount <= coverageAmount, \"Loan amount exceeds coverage\");\n        payable(insured).transfer(loanAmount);\n        emit Claimed(insured, loanAmount);\n    }\n\n    receive() external payable {}\n}\n",
  "sourcePath": "/home/sourav/programming/MetaCrafter/eth-advanced/2. Insurance/contracts/Collateral.sol",
  "ast": {
    "absolutePath": "project:/contracts/Collateral.sol",
    "exportedSymbols": {
      "CollateralProtectionInsurance": [
        428
      ],
      "Context": [
        177
      ],
      "Ownable": [
        147
      ],
      "ReentrancyGuard": [
        246
      ]
    },
    "id": 429,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 248,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:3"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 249,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 148,
        "src": "58:52:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "id": 250,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 429,
        "sourceUnit": 247,
        "src": "111:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 251,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "214:15:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 246,
              "src": "214:15:3"
            },
            "id": 252,
            "nodeType": "InheritanceSpecifier",
            "src": "214:15:3"
          },
          {
            "baseName": {
              "id": 253,
              "name": "Ownable",
              "nameLocations": [
                "231:7:3"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "231:7:3"
            },
            "id": 254,
            "nodeType": "InheritanceSpecifier",
            "src": "231:7:3"
          }
        ],
        "canonicalName": "CollateralProtectionInsurance",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 428,
        "linearizedBaseContracts": [
          428,
          147,
          177,
          246
        ],
        "name": "CollateralProtectionInsurance",
        "nameLocation": "181:29:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "eebb1363",
            "id": 256,
            "mutability": "mutable",
            "name": "insured",
            "nameLocation": "260:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "245:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 255,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "245:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 258,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "288:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "273:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 257,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "273:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "67c0d00f",
            "id": 260,
            "mutability": "mutable",
            "name": "coverageAmount",
            "nameLocation": "314:14:3",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "299:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 259,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c4b8db46",
            "id": 262,
            "mutability": "mutable",
            "name": "lastPaid",
            "nameLocation": "349:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "334:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 261,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "334:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CollateralProtectionInsurance.PolicyType",
            "id": 265,
            "members": [
              {
                "id": 263,
                "name": "Basic",
                "nameLocation": "382:5:3",
                "nodeType": "EnumValue",
                "src": "382:5:3"
              },
              {
                "id": 264,
                "name": "Premium",
                "nameLocation": "389:7:3",
                "nodeType": "EnumValue",
                "src": "389:7:3"
              }
            ],
            "name": "PolicyType",
            "nameLocation": "369:10:3",
            "nodeType": "EnumDefinition",
            "src": "364:34:3"
          },
          {
            "constant": false,
            "functionSelector": "0505c8c9",
            "id": 268,
            "mutability": "mutable",
            "name": "policy",
            "nameLocation": "421:6:3",
            "nodeType": "VariableDeclaration",
            "scope": 428,
            "src": "403:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_PolicyType_$265",
              "typeString": "enum CollateralProtectionInsurance.PolicyType"
            },
            "typeName": {
              "id": 267,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 266,
                "name": "PolicyType",
                "nameLocations": [
                  "403:10:3"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 265,
                "src": "403:10:3"
              },
              "referencedDeclaration": 265,
              "src": "403:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_PolicyType_$265",
                "typeString": "enum CollateralProtectionInsurance.PolicyType"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "fbb78d90c03ede71a52f887ed761d6178e310a2c426206ba0dc64a01691e16f1",
            "id": 274,
            "name": "PricePaid",
            "nameLocation": "439:9:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 270,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "465:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "449:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 272,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "479:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 274,
                  "src": "471:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "448:38:3"
            },
            "src": "433:54:3"
          },
          {
            "anonymous": false,
            "eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
            "id": 280,
            "name": "Claimed",
            "nameLocation": "498:7:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 276,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "522:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "506:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 278,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "536:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 280,
                  "src": "528:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:38:3"
            },
            "src": "492:52:3"
          },
          {
            "anonymous": false,
            "eventSelector": "72a13a5c6bbfd98d3dc4719b767656873b3c13c3139cb44ab7d3002250ba63da",
            "id": 285,
            "name": "PolicyChanged",
            "nameLocation": "555:13:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newPolicy",
                  "nameLocation": "580:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 285,
                  "src": "569:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyType_$265",
                    "typeString": "enum CollateralProtectionInsurance.PolicyType"
                  },
                  "typeName": {
                    "id": 282,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 281,
                      "name": "PolicyType",
                      "nameLocations": [
                        "569:10:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 265,
                      "src": "569:10:3"
                    },
                    "referencedDeclaration": 265,
                    "src": "569:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyType_$265",
                      "typeString": "enum CollateralProtectionInsurance.PolicyType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "568:22:3"
            },
            "src": "549:42:3"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "620:102:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 288,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "638:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "642:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "638:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 290,
                          "name": "insured",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 256,
                          "src": "652:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "638:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792074686520696e73757265642063616e20706572666f726d207468697320616374696f6e",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "661:42:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b",
                          "typeString": "literal_string \"Only the insured can perform this action\""
                        },
                        "value": "Only the insured can perform this action"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08c0ea24c48efc98414a109977e2a64d07f0bbc6d7f93f109129c11397c4261b",
                          "typeString": "literal_string \"Only the insured can perform this action\""
                        }
                      ],
                      "id": 287,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "630:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "630:74:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "630:74:3"
                },
                {
                  "id": 295,
                  "nodeType": "PlaceholderStatement",
                  "src": "714:1:3"
                }
              ]
            },
            "id": 297,
            "name": "onlyInsured",
            "nameLocation": "606:11:3",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "617:2:3"
            },
            "src": "597:125:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "776:35:3",
              "statements": [
                {
                  "expression": {
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 305,
                      "name": "insured",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "786:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 306,
                      "name": "_insured",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 299,
                      "src": "796:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "786:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 308,
                  "nodeType": "ExpressionStatement",
                  "src": "786:18:3"
                }
              ]
            },
            "id": 310,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 302,
                    "name": "_insured",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 299,
                    "src": "766:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 303,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 301,
                  "name": "Ownable",
                  "nameLocations": [
                    "758:7:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "758:7:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "758:17:3"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 299,
                  "mutability": "mutable",
                  "name": "_insured",
                  "nameLocation": "748:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "740:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "739:18:3"
            },
            "returnParameters": {
              "id": 304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "776:0:3"
            },
            "scope": 428,
            "src": "728:83:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "875:320:3",
              "statements": [
                {
                  "expression": {
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 318,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "885:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$265",
                        "typeString": "enum CollateralProtectionInsurance.PolicyType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 319,
                      "name": "_policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "894:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$265",
                        "typeString": "enum CollateralProtectionInsurance.PolicyType"
                      }
                    },
                    "src": "885:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyType_$265",
                      "typeString": "enum CollateralProtectionInsurance.PolicyType"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "885:16:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_PolicyType_$265",
                      "typeString": "enum CollateralProtectionInsurance.PolicyType"
                    },
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 322,
                      "name": "policy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "915:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$265",
                        "typeString": "enum CollateralProtectionInsurance.PolicyType"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 323,
                        "name": "PolicyType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "925:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_PolicyType_$265_$",
                          "typeString": "type(enum CollateralProtectionInsurance.PolicyType)"
                        }
                      },
                      "id": 324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "936:5:3",
                      "memberName": "Basic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 263,
                      "src": "925:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_PolicyType_$265",
                        "typeString": "enum CollateralProtectionInsurance.PolicyType"
                      }
                    },
                    "src": "915:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_PolicyType_$265",
                        "typeString": "enum CollateralProtectionInsurance.PolicyType"
                      },
                      "id": 338,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 335,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "1038:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyType_$265",
                          "typeString": "enum CollateralProtectionInsurance.PolicyType"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 336,
                          "name": "PolicyType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 265,
                          "src": "1048:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_PolicyType_$265_$",
                            "typeString": "type(enum CollateralProtectionInsurance.PolicyType)"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "1059:7:3",
                        "memberName": "Premium",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 264,
                        "src": "1048:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyType_$265",
                          "typeString": "enum CollateralProtectionInsurance.PolicyType"
                        }
                      },
                      "src": "1038:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 348,
                    "nodeType": "IfStatement",
                    "src": "1034:119:3",
                    "trueBody": {
                      "id": 347,
                      "nodeType": "Block",
                      "src": "1068:85:3",
                      "statements": [
                        {
                          "expression": {
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 339,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 258,
                              "src": "1082:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "302e303235",
                              "id": 340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1090:11:3",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25000000000000000_by_1",
                                "typeString": "int_const 25000000000000000"
                              },
                              "value": "0.025"
                            },
                            "src": "1082:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 342,
                          "nodeType": "ExpressionStatement",
                          "src": "1082:19:3"
                        },
                        {
                          "expression": {
                            "id": 345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 343,
                              "name": "coverageAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 260,
                              "src": "1115:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "hexValue": "302e3035",
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1132:10:3",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000_by_1",
                                "typeString": "int_const 50000000000000000"
                              },
                              "value": "0.05"
                            },
                            "src": "1115:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 346,
                          "nodeType": "ExpressionStatement",
                          "src": "1115:27:3"
                        }
                      ]
                    }
                  },
                  "id": 349,
                  "nodeType": "IfStatement",
                  "src": "911:242:3",
                  "trueBody": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "943:85:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 326,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "957:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "302e303031",
                            "id": 327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "965:11:3",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000_by_1",
                              "typeString": "int_const 1000000000000000"
                            },
                            "value": "0.001"
                          },
                          "src": "957:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "957:19:3"
                      },
                      {
                        "expression": {
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 330,
                            "name": "coverageAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "990:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "302e3032",
                            "id": 331,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1007:10:3",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_20000000000000000_by_1",
                              "typeString": "int_const 20000000000000000"
                            },
                            "value": "0.02"
                          },
                          "src": "990:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "990:27:3"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "policy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "1181:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_PolicyType_$265",
                          "typeString": "enum CollateralProtectionInsurance.PolicyType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_PolicyType_$265",
                          "typeString": "enum CollateralProtectionInsurance.PolicyType"
                        }
                      ],
                      "id": 350,
                      "name": "PolicyChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "1167:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_enum$_PolicyType_$265_$returns$__$",
                        "typeString": "function (enum CollateralProtectionInsurance.PolicyType)"
                      }
                    },
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1167:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 353,
                  "nodeType": "EmitStatement",
                  "src": "1162:26:3"
                }
              ]
            },
            "functionSelector": "74bce0bc",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 315,
                  "name": "onlyInsured",
                  "nameLocations": [
                    "863:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 297,
                  "src": "863:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "863:11:3"
              }
            ],
            "name": "setPolicy",
            "nameLocation": "826:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 313,
                  "mutability": "mutable",
                  "name": "_policy",
                  "nameLocation": "847:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "836:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_PolicyType_$265",
                    "typeString": "enum CollateralProtectionInsurance.PolicyType"
                  },
                  "typeName": {
                    "id": 312,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 311,
                      "name": "PolicyType",
                      "nameLocations": [
                        "836:10:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 265,
                      "src": "836:10:3"
                    },
                    "referencedDeclaration": 265,
                    "src": "836:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_PolicyType_$265",
                      "typeString": "enum CollateralProtectionInsurance.PolicyType"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "835:20:3"
            },
            "returnParameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "875:0:3"
            },
            "scope": 428,
            "src": "817:378:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 382,
              "nodeType": "Block",
              "src": "1261:146:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 363,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1279:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1283:5:3",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1279:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 365,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 258,
                          "src": "1292:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1279:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f7272656374207072696365",
                        "id": 367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1299:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149",
                          "typeString": "literal_string \"Incorrect price\""
                        },
                        "value": "Incorrect price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e009b71ab24c0b738cd70822914618b8046d0734d12beda9ed7b79180adc149",
                          "typeString": "literal_string \"Incorrect price\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1271:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 369,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:46:3"
                },
                {
                  "expression": {
                    "id": 373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 370,
                      "name": "lastPaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "1327:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 371,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1338:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 372,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1344:9:3",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1338:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1327:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 374,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:26:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 376,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1378:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1382:6:3",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1378:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 378,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1390:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1394:5:3",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1390:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 375,
                      "name": "PricePaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 274,
                      "src": "1368:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1368:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "EmitStatement",
                  "src": "1363:37:3"
                }
              ]
            },
            "functionSelector": "4ce115d8",
            "id": 383,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 358,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 357,
                  "name": "onlyInsured",
                  "nameLocations": [
                    "1236:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 297,
                  "src": "1236:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1236:11:3"
              },
              {
                "id": 360,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 359,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1248:12:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "1248:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1248:12:3"
              }
            ],
            "name": "payPrice",
            "nameLocation": "1210:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:2:3"
            },
            "returnParameters": {
              "id": 361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1261:0:3"
            },
            "scope": 428,
            "src": "1201:206:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 422,
              "nodeType": "Block",
              "src": "1480:250:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 393,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1498:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1504:9:3",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1498:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 395,
                            "name": "lastPaid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "1517:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3330",
                            "id": 396,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1528:7:3",
                            "subdenomination": "days",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2592000_by_1",
                              "typeString": "int_const 2592000"
                            },
                            "value": "30"
                          },
                          "src": "1517:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1498:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506f6c6963792065787069726564",
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1537:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                          "typeString": "literal_string \"Policy expired\""
                        },
                        "value": "Policy expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbad214ed6bf41820a0e702e9e0047c532914978e9be30f76dfaa6ed49d81700",
                          "typeString": "literal_string \"Policy expired\""
                        }
                      ],
                      "id": 392,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1490:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1490:64:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 401,
                  "nodeType": "ExpressionStatement",
                  "src": "1490:64:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 403,
                          "name": "loanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 385,
                          "src": "1572:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 404,
                          "name": "coverageAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "1586:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1572:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f616e20616d6f756e74206578636565647320636f766572616765",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_93436cf49480a39c0d4ce2bfff553538d37b8862e346ee88ad925a4fbd7db844",
                          "typeString": "literal_string \"Loan amount exceeds coverage\""
                        },
                        "value": "Loan amount exceeds coverage"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_93436cf49480a39c0d4ce2bfff553538d37b8862e346ee88ad925a4fbd7db844",
                          "typeString": "literal_string \"Loan amount exceeds coverage\""
                        }
                      ],
                      "id": 402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1564:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1564:69:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:69:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 414,
                        "name": "loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "1669:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 411,
                            "name": "insured",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1651:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1643:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 409,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1643:8:3",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1643:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1660:8:3",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1643:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1643:37:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 416,
                  "nodeType": "ExpressionStatement",
                  "src": "1643:37:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 418,
                        "name": "insured",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 256,
                        "src": "1703:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 419,
                        "name": "loanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "1712:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 417,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 280,
                      "src": "1695:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1695:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 421,
                  "nodeType": "EmitStatement",
                  "src": "1690:33:3"
                }
              ]
            },
            "functionSelector": "379607f5",
            "id": 423,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 388,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 387,
                  "name": "onlyInsured",
                  "nameLocations": [
                    "1455:11:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 297,
                  "src": "1455:11:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1455:11:3"
              },
              {
                "id": 390,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 389,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1467:12:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "1467:12:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1467:12:3"
              }
            ],
            "name": "claim",
            "nameLocation": "1422:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "loanAmount",
                  "nameLocation": "1436:10:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 423,
                  "src": "1428:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1428:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1427:20:3"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1480:0:3"
            },
            "scope": 428,
            "src": "1413:317:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "1763:2:3",
              "statements": []
            },
            "id": 427,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1743:2:3"
            },
            "returnParameters": {
              "id": 425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:3"
            },
            "scope": 428,
            "src": "1736:29:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 429,
        "src": "172:1595:3",
        "usedErrors": [
          13,
          18,
          191
        ],
        "usedEvents": [
          24,
          274,
          280,
          285
        ]
      }
    ],
    "src": "32:1736:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-17T10:35:57.251Z",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}