{
  "contractName": "Vesting",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Admin",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensReleased",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract Admin",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vestingSchedules",
      "outputs": [
        {
          "internalType": "enum Vesting.UserType",
          "name": "userType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "whitelistAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "enum Vesting.UserType",
          "name": "userType",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "releaseTime",
          "type": "uint256"
        }
      ],
      "name": "setVestingSchedule",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Admin\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensReleased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"enum Vesting.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"}],\"name\":\"setVestingSchedule\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract Admin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingSchedules\",\"outputs\":[{\"internalType\":\"enum Vesting.UserType\",\"name\":\"userType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releaseTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"whitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Vesting.sol\":\"Vesting\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/Admin.sol\":{\"keccak256\":\"0x0f5bdf559e7288a7ea89d81db2b2124cc8505e7e6beca5a9a003a7cc492b0ef9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4bcf53b0b5a27e6b9d9b4b8a23f12613e37e2e2c1b9f876a77c41bc3a2683acb\",\"dweb:/ipfs/QmTrmoNyUMsHnWJJu9EsMLMnVgLJ8xWgzEhYtTKqYnEf2s\"]},\"project:/contracts/Vesting.sol\":{\"keccak256\":\"0xaad41fce7ebed4db621fbfa720cf258c980b1a7cbfb02671b6157637be5af782\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://029ad8f60a268af81faced72d51e75097abbf709c0d8b9c2af74691273d1e7d1\",\"dweb:/ipfs/QmcRStC6StBuVpycLHc9mbh5PMJwtGZsCbXtMkqcedvpfi\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561000f575f80fd5b506040516109f33803806109f383398101604081905261002e916100d1565b338061005357604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b61005c81610082565b50600180546001600160a01b0319166001600160a01b03929092169190911790556100fe565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100e1575f80fd5b81516001600160a01b03811681146100f7575f80fd5b9392505050565b6108e88061010b5f395ff3fe608060405234801561000f575f80fd5b5060043610610090575f3560e01c80638da5cb5b116100635780638da5cb5b146100fb578063a96f86681461011f578063f2fde38b14610127578063fc0c546a1461013a578063fdb20ccb1461014d575f80fd5b806306c933d81461009457806341566585146100cb578063539e2fb9146100e0578063715018a6146100f3575b5f80fd5b6100b66100a23660046107dd565b60036020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100de6100d93660046107dd565b610198565b005b6100de6100ee3660046107fd565b610230565b6100de610400565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100c2565b6100de610413565b6100de6101353660046107dd565b61070a565b600154610107906001600160a01b031681565b61018861015b3660046107dd565b600260208190525f9182526040909120805460018201549282015460039092015460ff9182169392911684565b6040516100c29493929190610855565b6101a0610747565b6001600160a01b0381165f9081526003602052604090205460ff161561020d5760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792077686974656c6973746564000060448201526064015b60405180910390fd5b6001600160a01b03165f908152600360205260409020805460ff19166001179055565b610238610747565b6001600160a01b0384165f9081526003602052604090205460ff1661029f5760405162461bcd60e51b815260206004820152601a60248201527f41646472657373206973206e6f742077686974656c69737465640000000000006044820152606401610204565b60405180608001604052808460068111156102bc576102bc610841565b8152602080820185905260408083018590525f60609093018390526001600160a01b03881683526002909152902081518154829060ff1916600183600681111561030857610308610841565b0217905550602082015160018281019190915560408084015160028401556060909301516003909201805460ff1916921515929092179091555490516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610392573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b69190610893565b6103fa5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610204565b50505050565b610408610747565b6104115f610773565b565b335f90815260026020908152604080832060039092529091205460ff1661047c5760405162461bcd60e51b815260206004820152601a60248201527f41646472657373206973206e6f742077686974656c69737465640000000000006044820152606401610204565b80600201544210156104d05760405162461bcd60e51b815260206004820152601760248201527f546f6b656e7320617265207374696c6c206c6f636b65640000000000000000006044820152606401610204565b600381015460ff161561051e5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b6044820152606401610204565b5f8160010154116105685760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e7320746f2072656c6561736560601b6044820152606401610204565b5f815460ff16600681111561057f5761057f610841565b14806105a057506001815460ff16600681111561059e5761059e610841565b145b806105c057506002815460ff1660068111156105be576105be610841565b145b806105e057506003815460ff1660068111156105de576105de610841565b145b61062c5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420616c6c6f77656420746f20636c61696d20746f6b656e7300000000006044820152606401610204565b60038101805460ff1916600190811790915580549082015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610690573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b49190610893565b50335f818152600260209081526040808320600190810193909355918401548251938452908301527fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179910160405180910390a150565b610712610747565b6001600160a01b03811661073b57604051631e4fbdf760e01b81525f6004820152602401610204565b61074481610773565b50565b5f546001600160a01b031633146104115760405163118cdaa760e01b8152336004820152602401610204565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107d8575f80fd5b919050565b5f602082840312156107ed575f80fd5b6107f6826107c2565b9392505050565b5f805f8060808587031215610810575f80fd5b610819856107c2565b935060208501356007811061082c575f80fd5b93969395505050506040820135916060013590565b634e487b7160e01b5f52602160045260245ffd5b608081016007861061087557634e487b7160e01b5f52602160045260245ffd5b94815260208101939093526040830191909152151560609091015290565b5f602082840312156108a3575f80fd5b815180151581146107f6575f80fdfea26469706673582212208d13b32434f619feee566d26c2a9d95edf670c4ccd5785f0e44a7da7b4ade28764736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b5060043610610090575f3560e01c80638da5cb5b116100635780638da5cb5b146100fb578063a96f86681461011f578063f2fde38b14610127578063fc0c546a1461013a578063fdb20ccb1461014d575f80fd5b806306c933d81461009457806341566585146100cb578063539e2fb9146100e0578063715018a6146100f3575b5f80fd5b6100b66100a23660046107dd565b60036020525f908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100de6100d93660046107dd565b610198565b005b6100de6100ee3660046107fd565b610230565b6100de610400565b5f546001600160a01b03165b6040516001600160a01b0390911681526020016100c2565b6100de610413565b6100de6101353660046107dd565b61070a565b600154610107906001600160a01b031681565b61018861015b3660046107dd565b600260208190525f9182526040909120805460018201549282015460039092015460ff9182169392911684565b6040516100c29493929190610855565b6101a0610747565b6001600160a01b0381165f9081526003602052604090205460ff161561020d5760405162461bcd60e51b815260206004820152601e60248201527f4164647265737320697320616c72656164792077686974656c6973746564000060448201526064015b60405180910390fd5b6001600160a01b03165f908152600360205260409020805460ff19166001179055565b610238610747565b6001600160a01b0384165f9081526003602052604090205460ff1661029f5760405162461bcd60e51b815260206004820152601a60248201527f41646472657373206973206e6f742077686974656c69737465640000000000006044820152606401610204565b60405180608001604052808460068111156102bc576102bc610841565b8152602080820185905260408083018590525f60609093018390526001600160a01b03881683526002909152902081518154829060ff1916600183600681111561030857610308610841565b0217905550602082015160018281019190915560408084015160028401556060909301516003909201805460ff1916921515929092179091555490516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af1158015610392573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103b69190610893565b6103fa5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610204565b50505050565b610408610747565b6104115f610773565b565b335f90815260026020908152604080832060039092529091205460ff1661047c5760405162461bcd60e51b815260206004820152601a60248201527f41646472657373206973206e6f742077686974656c69737465640000000000006044820152606401610204565b80600201544210156104d05760405162461bcd60e51b815260206004820152601760248201527f546f6b656e7320617265207374696c6c206c6f636b65640000000000000000006044820152606401610204565b600381015460ff161561051e5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b9cc8185b1c9958591e4818db185a5b595960521b6044820152606401610204565b5f8160010154116105685760405162461bcd60e51b81526020600482015260146024820152734e6f20746f6b656e7320746f2072656c6561736560601b6044820152606401610204565b5f815460ff16600681111561057f5761057f610841565b14806105a057506001815460ff16600681111561059e5761059e610841565b145b806105c057506002815460ff1660068111156105be576105be610841565b145b806105e057506003815460ff1660068111156105de576105de610841565b145b61062c5760405162461bcd60e51b815260206004820152601b60248201527f4e6f7420616c6c6f77656420746f20636c61696d20746f6b656e7300000000006044820152606401610204565b60038101805460ff1916600190811790915580549082015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610690573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b49190610893565b50335f818152600260209081526040808320600190810193909355918401548251938452908301527fc7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179910160405180910390a150565b610712610747565b6001600160a01b03811661073b57604051631e4fbdf760e01b81525f6004820152602401610204565b61074481610773565b50565b5f546001600160a01b031633146104115760405163118cdaa760e01b8152336004820152602401610204565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146107d8575f80fd5b919050565b5f602082840312156107ed575f80fd5b6107f6826107c2565b9392505050565b5f805f8060808587031215610810575f80fd5b610819856107c2565b935060208501356007811061082c575f80fd5b93969395505050506040820135916060013590565b634e487b7160e01b5f52602160045260245ffd5b608081016007861061087557634e487b7160e01b5f52602160045260245ffd5b94815260208101939093526040830191909152151560609091015290565b5f602082840312156108a3575f80fd5b815180151581146107f6575f80fdfea26469706673582212208d13b32434f619feee566d26c2a9d95edf670c4ccd5785f0e44a7da7b4ade28764736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:528:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:209:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "155:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "164:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "157:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "157:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "157:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "130:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "139:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "126:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "126:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "151:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "122:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "122:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "119:52:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "180:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "199:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "193:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "193:16:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "184:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "272:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "281:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "274:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "274:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "274:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "231:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "242:5:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "262:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "253:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "253:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "266:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "249:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "249:19:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "238:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "238:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "228:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "228:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "221:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:50:8"
                  },
                  "nodeType": "YulIf",
                  "src": "218:70:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "297:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "307:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "297:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_Admin_$1046_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "75:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "86:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "98:6:8",
                "type": ""
              }
            ],
            "src": "14:304:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "424:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "434:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "446:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "457:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "442:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "442:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "434:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "476:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "491:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "507:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "512:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "503:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "503:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "516:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "499:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "499:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "469:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "469:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "469:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "393:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "404:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "415:4:8",
                "type": ""
              }
            ],
            "src": "323:203:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_Admin_$1046_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5602:8",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:8",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:8"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:8",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:8",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:8"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:8"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:8"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:8",
                "type": ""
              }
            ],
            "src": "14:173:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:8",
                "type": ""
              }
            ],
            "src": "192:186:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "478:92:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "488:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "496:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "496:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "488:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "555:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "548:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "548:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "541:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "541:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:41:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:41:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "447:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "458:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "469:4:8",
                "type": ""
              }
            ],
            "src": "383:187:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "709:346:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "756:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "765:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "768:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "758:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "758:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "758:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "730:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "739:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "726:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "726:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "751:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "722:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "722:33:8"
                  },
                  "nodeType": "YulIf",
                  "src": "719:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "781:39:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "810:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "791:18:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "791:29:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "829:45:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "859:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "870:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "842:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:32:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "833:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "907:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "916:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "919:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "909:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "909:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "909:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "896:5:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "903:1:8",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "893:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "893:12:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "886:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "886:20:8"
                  },
                  "nodeType": "YulIf",
                  "src": "883:40:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "932:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "942:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "932:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "956:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "983:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "994:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "979:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "979:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "966:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "956:6:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1007:42:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1034:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1045:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1030:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1030:18:8"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1017:12:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:32:8"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1007:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_enum$_UserType_$1060t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "651:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "662:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "674:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "682:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "690:6:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "698:6:8",
                "type": ""
              }
            ],
            "src": "575:480:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1161:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1171:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1183:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1194:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1179:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1179:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1171:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1213:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1228:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1244:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1249:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1240:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1253:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1236:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1236:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1224:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1224:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1206:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1206:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1206:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1130:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1141:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1152:4:8",
                "type": ""
              }
            ],
            "src": "1060:203:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1383:102:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1393:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1405:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1416:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1401:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1401:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1393:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1435:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1450:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1466:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1471:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1462:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1462:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1475:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1458:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1458:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1446:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1446:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1428:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1428:51:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_Admin_$1046__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1352:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1363:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1374:4:8",
                "type": ""
              }
            ],
            "src": "1268:217:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1522:95:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1539:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1546:3:8",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1551:10:8",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1542:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1542:20:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1532:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1532:31:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1532:31:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1579:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1582:4:8",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1572:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1572:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1572:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1603:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1606:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1596:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1596:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1596:15:8"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1490:127:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1812:375:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1822:27:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1834:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1845:3:8",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1830:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1830:19:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1822:4:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1891:111:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1912:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1919:3:8",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1924:10:8",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1915:3:8"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1915:20:8"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1905:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1905:31:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1905:31:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1956:1:8",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1959:4:8",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1949:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1949:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1949:15:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1984:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1987:4:8",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1977:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1977:15:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1977:15:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1871:6:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1879:1:8",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1868:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1868:13:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1861:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1861:21:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1858:144:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2018:9:8"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2029:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2011:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2011:25:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2011:25:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2056:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2067:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2052:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2052:18:8"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2072:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2045:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2045:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2099:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2110:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2095:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2095:18:8"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2115:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2088:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2088:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2088:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2142:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2153:2:8",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2138:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2138:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "2172:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2165:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2165:14:8"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2158:6:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2158:22:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2131:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2131:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2131:50:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_UserType_$1060_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1757:9:8",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1768:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1776:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1784:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1792:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1803:4:8",
                "type": ""
              }
            ],
            "src": "1622:565:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2366:180:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2383:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2394:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2376:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2376:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2376:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2417:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2428:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2413:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2413:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2433:2:8",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2406:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2406:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2406:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2456:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2467:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2452:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2452:18:8"
                      },
                      {
                        "hexValue": "4164647265737320697320616c72656164792077686974656c6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2472:32:8",
                        "type": "",
                        "value": "Address is already whitelisted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2445:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2445:60:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2445:60:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2514:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2526:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2537:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2522:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2522:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2514:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2343:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2357:4:8",
                "type": ""
              }
            ],
            "src": "2192:354:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2725:176:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2742:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2753:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2735:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2735:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2735:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2776:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2787:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2772:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2772:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2792:2:8",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2765:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2765:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2815:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2826:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2811:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:18:8"
                      },
                      {
                        "hexValue": "41646472657373206973206e6f742077686974656c6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2831:28:8",
                        "type": "",
                        "value": "Address is not whitelisted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2804:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2804:56:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2804:56:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2869:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2881:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2892:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2877:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2877:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2869:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4611c14483b1c5d29d6aa0fce6725835930a1ffef991576e7129fc5a65452dda__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2702:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2716:4:8",
                "type": ""
              }
            ],
            "src": "2551:350:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3063:218:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3073:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3085:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3096:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3081:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3081:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3073:4:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3108:29:8",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3126:3:8",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3131:1:8",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3122:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3122:11:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3135:1:8",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3118:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:19:8"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3112:2:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3153:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3168:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3176:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3164:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3164:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3146:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3146:34:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3200:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3211:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3196:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3196:18:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3220:6:8"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3228:2:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3216:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3216:15:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3189:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3189:43:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3189:43:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3252:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3263:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3248:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3248:18:8"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3268:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3241:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3241:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3241:34:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3016:9:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3027:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3035:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3043:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3054:4:8",
                "type": ""
              }
            ],
            "src": "2906:375:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3364:199:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3410:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3419:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3422:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3412:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3412:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3412:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3385:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3394:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3381:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3406:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3377:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3374:52:8"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3435:29:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3454:9:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3448:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3448:16:8"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3439:5:8",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3517:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3526:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3529:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3519:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3519:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3519:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3486:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3507:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3500:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3500:13:8"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3493:6:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3493:21:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3483:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3483:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3476:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3476:40:8"
                  },
                  "nodeType": "YulIf",
                  "src": "3473:60:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3542:15:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3552:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3542:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3330:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3341:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3353:6:8",
                "type": ""
              }
            ],
            "src": "3286:277:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3742:171:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3759:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3770:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3752:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3752:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3752:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3793:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3804:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3789:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3789:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3809:2:8",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3782:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3782:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3782:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3832:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3843:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3828:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3828:18:8"
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3848:23:8",
                        "type": "",
                        "value": "Token transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3821:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3821:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3821:51:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3881:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3893:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3904:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3889:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3889:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3881:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3719:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3733:4:8",
                "type": ""
              }
            ],
            "src": "3568:345:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4092:173:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4109:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4120:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4102:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4102:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4102:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4143:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4154:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4139:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4139:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4159:2:8",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4132:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4132:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4132:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4182:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4193:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4178:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4178:18:8"
                      },
                      {
                        "hexValue": "546f6b656e7320617265207374696c6c206c6f636b6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4198:25:8",
                        "type": "",
                        "value": "Tokens are still locked"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4171:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4171:53:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4171:53:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4233:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4245:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4256:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4241:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4241:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4233:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4069:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4083:4:8",
                "type": ""
              }
            ],
            "src": "3918:347:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4444:172:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4461:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4472:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4454:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4454:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4454:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4495:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4506:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4491:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4491:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4511:2:8",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4484:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4484:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4484:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4534:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4545:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4530:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4530:18:8"
                      },
                      {
                        "hexValue": "546f6b656e7320616c726561647920636c61696d6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4550:24:8",
                        "type": "",
                        "value": "Tokens already claimed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4523:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4523:52:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4523:52:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4584:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4596:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4607:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4592:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4592:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4584:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4421:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4435:4:8",
                "type": ""
              }
            ],
            "src": "4270:346:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4795:170:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4812:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4823:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4805:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4805:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4846:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4857:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4842:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4842:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4862:2:8",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4835:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4835:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4835:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4885:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4896:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4881:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4881:18:8"
                      },
                      {
                        "hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4901:22:8",
                        "type": "",
                        "value": "No tokens to release"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4874:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4874:50:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4874:50:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4933:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4945:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4956:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4941:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4941:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4933:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4772:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4786:4:8",
                "type": ""
              }
            ],
            "src": "4621:344:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5144:177:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5161:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5172:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5154:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5154:21:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5154:21:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5195:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5206:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5191:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5191:18:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5211:2:8",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5184:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5184:30:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5184:30:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5234:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5245:2:8",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5230:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5230:18:8"
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f20636c61696d20746f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5250:29:8",
                        "type": "",
                        "value": "Not allowed to claim tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5223:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5223:57:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5223:57:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5289:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5301:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5312:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5297:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5297:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5289:4:8"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6f75f570040c291180180a405f9938151dc0325b63731d22cb72d52b42eb31f5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5121:9:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5135:4:8",
                "type": ""
              }
            ],
            "src": "4970:351:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5455:145:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5465:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5477:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5488:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5473:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5473:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5465:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5507:9:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5522:6:8"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5538:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5543:1:8",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5534:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5534:11:8"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5547:1:8",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5530:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5530:19:8"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5518:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5518:32:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5500:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5500:51:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5500:51:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5571:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5582:2:8",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5567:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5567:18:8"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5587:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5560:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5560:34:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5560:34:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5416:9:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5427:6:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5435:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5446:4:8",
                "type": ""
              }
            ],
            "src": "5326:274:8"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_enum$_UserType_$1060t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(lt(value, 7)) { revert(0, 0) }\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_Admin_$1046__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_UserType_$1060_t_uint256_t_uint256_t_bool__to_t_uint8_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        if iszero(lt(value0, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Address is already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4611c14483b1c5d29d6aa0fce6725835930a1ffef991576e7129fc5a65452dda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Address is not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Tokens are still locked\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Tokens already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No tokens to release\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6f75f570040c291180180a405f9938151dc0325b63731d22cb72d52b42eb31f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Not allowed to claim tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "134:2144:7:-:0;;;678:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;712:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;469:51:8;442:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;734:5:7::1;:14:::0;;-1:-1:-1;;;;;;734:14:7::1;-1:-1:-1::0;;;;;734:14:7;;;::::1;::::0;;;::::1;::::0;;134:2144;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:304:8:-;98:6;151:2;139:9;130:7;126:23;122:32;119:52;;;167:1;164;157:12;119:52;193:16;;-1:-1:-1;;;;;238:31:8;;228:42;;218:70;;284:1;281;274:12;218:70;307:5;14:304;-1:-1:-1;;;14:304:8:o;323:203::-;134:2144:7;;;;;;",
  "deployedSourceMap": "134:2144:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:52;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:14:8;;541:22;523:41;;511:2;496:18;555:52:7;;;;;;;;761:210;;;;;;:::i;:::-;;:::i;:::-;;977:406;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1224:32:8;;;1206:51;;1194:2;1179:18;1638:85:0;1060:203:8;1389:887:7;;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;466:18:7:-;;;;;-1:-1:-1;;;;;466:18:7;;;490:59;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;761:210::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;846:33:7;::::1;;::::0;;;:20:::1;:33;::::0;;;;;::::1;;845:34;837:77;;;::::0;-1:-1:-1;;;837:77:7;;2394:2:8;837:77:7::1;::::0;::::1;2376:21:8::0;2433:2;2413:18;;;2406:30;2472:32;2452:18;;;2445:60;2522:18;;837:77:7::1;;;;;;;;;-1:-1:-1::0;;;;;924:33:7::1;;::::0;;;:20:::1;:33;::::0;;;;:40;;-1:-1:-1;;924:40:7::1;960:4;924:40;::::0;;761:210::o;977:406::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;1119:33:7;::::1;;::::0;;;:20:::1;:33;::::0;;;;;::::1;;1111:72;;;::::0;-1:-1:-1;;;1111:72:7;;2753:2:8;1111:72:7::1;::::0;::::1;2735:21:8::0;2792:2;2772:18;;;2765:30;2831:28;2811:18;;;2804:56;2877:18;;1111:72:7::1;2551:350:8::0;1111:72:7::1;1226:53;;;;;;;;1242:8;1226:53;;;;;;;;:::i;:::-;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;;-1:-1:-1;1226:53:7;;;;;;;-1:-1:-1;;;;;1194:29:7;::::1;::::0;;:16:::1;:29:::0;;;;;:85;;;;:29;;-1:-1:-1;;1194:85:7::1;1226:53:::0;1194:85;::::1;::::0;::::1;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;1194:85:7::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;1194:85:7::1;::::0;::::1;;::::0;;;::::1;::::0;;;1297:5;:53;;-1:-1:-1;;;1297:53:7;;1316:10:::1;1297:53;::::0;::::1;3146:34:8::0;1336:4:7::1;3196:18:8::0;;;3189:43;3248:18;;;3241:34;;;-1:-1:-1;;;;;1297:5:7;;::::1;::::0;:18:::1;::::0;3081::8;;1297:53:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1289:87;;;::::0;-1:-1:-1;;;1289:87:7;;3770:2:8;1289:87:7::1;::::0;::::1;3752:21:8::0;3809:2;3789:18;;;3782:30;-1:-1:-1;;;3828:18:8;;;3821:51;3889:18;;1289:87:7::1;3568:345:8::0;1289:87:7::1;977:406:::0;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1389:887:7:-;1485:10;1433:32;1468:28;;;:16;:28;;;;;;;;1514:20;:32;;;;;;;;;1506:71;;;;-1:-1:-1;;;1506:71:7;;2753:2:8;1506:71:7;;;2735:21:8;2792:2;2772:18;;;2765:30;2831:28;2811:18;;;2804:56;2877:18;;1506:71:7;2551:350:8;1506:71:7;1614:8;:20;;;1595:15;:39;;1587:75;;;;-1:-1:-1;;;1587:75:7;;4120:2:8;1587:75:7;;;4102:21:8;4159:2;4139:18;;;4132:30;4198:25;4178:18;;;4171:53;4241:18;;1587:75:7;3918:347:8;1587:75:7;1681:16;;;;;;1680:17;1672:52;;;;-1:-1:-1;;;1672:52:7;;4472:2:8;1672:52:7;;;4454:21:8;4511:2;4491:18;;;4484:30;-1:-1:-1;;;4530:18:8;;;4523:52;4592:18;;1672:52:7;4270:346:8;1672:52:7;1760:1;1742:8;:15;;;:19;1734:52;;;;-1:-1:-1;;;1734:52:7;;4823:2:8;1734:52:7;;;4805:21:8;4862:2;4842:18;;;4835:30;-1:-1:-1;;;4881:18:8;;;4874:50;4941:18;;1734:52:7;4621:344:8;1734:52:7;1839:16;1818:17;;;;:37;;;;;;;;:::i;:::-;;:91;;;-1:-1:-1;1892:17:7;1871;;;;:38;;;;;;;;:::i;:::-;;1818:91;:146;;;-1:-1:-1;1946:18:7;1925:17;;;;:39;;;;;;;;:::i;:::-;;1818:146;:204;;;-1:-1:-1;2001:21:7;1980:17;;;;:42;;;;;;;;:::i;:::-;;1818:204;1797:278;;;;-1:-1:-1;;;1797:278:7;;5172:2:8;1797:278:7;;;5154:21:8;5211:2;5191:18;;;5184:30;5250:29;5230:18;;;5223:57;5297:18;;1797:278:7;4970:351:8;1797:278:7;2086:16;;;:23;;-1:-1:-1;;2086:23:7;2105:4;2086:23;;;;;;2119:5;;2146:15;;;;2119:43;;-1:-1:-1;;;2119:43:7;;2134:10;2119:43;;;5500:51:8;5567:18;;;5560:34;;;;-1:-1:-1;;;;;2119:5:7;;;;:14;;5473:18:8;;2119:43:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2189:10:7;2210:1;2172:28;;;:16;:28;;;;;;;;:35;;;;:39;;;;2253:15;;;;2226:43;;5500:51:8;;;5567:18;;;5560:34;2226:43:7;;5473:18:8;2226:43:7;;;;;;;1423:853;1389:887::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1206:51:8::0;1179:18;;2672:31:0::1;1060:203:8::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;1206:51:8;1179:18;;1901:40:0;1060:203:8;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:173:8:-;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:8:o;575:480::-;674:6;682;690;698;751:3;739:9;730:7;726:23;722:33;719:53;;;768:1;765;758:12;719:53;791:29;810:9;791:29;:::i;:::-;781:39;;870:2;859:9;855:18;842:32;903:1;896:5;893:12;883:40;;919:1;916;909:12;883:40;575:480;;942:5;;-1:-1:-1;;;;994:2:8;979:18;;966:32;;1045:2;1030:18;1017:32;;575:480::o;1490:127::-;1551:10;1546:3;1542:20;1539:1;1532:31;1582:4;1579:1;1572:15;1606:4;1603:1;1596:15;1622:565;1845:3;1830:19;;1879:1;1868:13;;1858:144;;1924:10;1919:3;1915:20;1912:1;1905:31;1959:4;1956:1;1949:15;1987:4;1984:1;1977:15;1858:144;2011:25;;;2067:2;2052:18;;2045:34;;;;2110:2;2095:18;;2088:34;;;;2165:14;2158:22;2153:2;2138:18;;;2131:50;1622:565;:::o;3286:277::-;3353:6;3406:2;3394:9;3385:7;3381:23;3377:32;3374:52;;;3422:1;3419;3412:12;3374:52;3454:9;3448:16;3507:5;3500:13;3493:21;3486:5;3483:32;3473:60;;3529:1;3526;3519:12",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./Admin.sol\";\n\ncontract Vesting is Ownable {\n    enum UserType {\n        Founder,\n        Investor,\n        CoFounder,\n        PreSaleBuyer,\n        RegularBuyer,\n        Consumer,\n        Retailer\n    }\n\n    struct VestingSchedule {\n        UserType userType;\n        uint256 amount;\n        uint256 releaseTime;\n        bool claimed;\n    }\n\n    Admin public token;\n    mapping(address => VestingSchedule) public vestingSchedules;\n    mapping(address => bool) public whitelistedAddresses;\n\n    event TokensReleased(address beneficiary, uint256 amount);\n\n    constructor(Admin _token) Ownable(msg.sender) {\n        token = _token;\n    }\n\n    function whitelistAddress(address beneficiary) external onlyOwner {\n        require(!whitelistedAddresses[beneficiary], \"Address is already whitelisted\");\n        whitelistedAddresses[beneficiary] = true;\n    }\n\n    function setVestingSchedule(address beneficiary, UserType userType, uint256 amount, uint256 releaseTime) external onlyOwner {\n        require(whitelistedAddresses[beneficiary], \"Address is not whitelisted\");\n\n        vestingSchedules[beneficiary] = VestingSchedule(userType, amount, releaseTime, false);\n        require(token.transferFrom(msg.sender, address(this), amount), \"Token transfer failed\");\n    }\n\n    function releaseTokens() external {\n        VestingSchedule storage schedule = vestingSchedules[msg.sender];\n        require(whitelistedAddresses[msg.sender], \"Address is not whitelisted\");\n        require(block.timestamp >= schedule.releaseTime, \"Tokens are still locked\");\n        require(!schedule.claimed, \"Tokens already claimed\");\n        require(schedule.amount > 0, \"No tokens to release\");\n\n        require(\n            schedule.userType == UserType.Founder ||\n            schedule.userType == UserType.Investor ||\n            schedule.userType == UserType.CoFounder ||\n            schedule.userType == UserType.PreSaleBuyer,\n            \"Not allowed to claim tokens\"\n        );\n\n        schedule.claimed = true;\n        token.transfer(msg.sender, schedule.amount);\n        vestingSchedules[msg.sender].amount = 0;\n        emit TokensReleased(msg.sender, schedule.amount);\n    }\n}\n",
  "sourcePath": "/home/sourav/programming/MetaCrafter/eth-advanced/1. Token/contracts/Vesting.sol",
  "ast": {
    "absolutePath": "project:/contracts/Vesting.sol",
    "exportedSymbols": {
      "Admin": [
        1046
      ],
      "Context": [
        933
      ],
      "ERC20": [
        799
      ],
      "IERC20": [
        877
      ],
      "IERC20Errors": [
        189
      ],
      "IERC20Metadata": [
        903
      ],
      "Ownable": [
        147
      ],
      "Vesting": [
        1274
      ]
    },
    "id": 1275,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1048,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1049,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1275,
        "sourceUnit": 148,
        "src": "58:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 1050,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1275,
        "sourceUnit": 1047,
        "src": "111:21:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1051,
              "name": "Ownable",
              "nameLocations": [
                "154:7:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 147,
              "src": "154:7:7"
            },
            "id": 1052,
            "nodeType": "InheritanceSpecifier",
            "src": "154:7:7"
          }
        ],
        "canonicalName": "Vesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1274,
        "linearizedBaseContracts": [
          1274,
          147,
          933
        ],
        "name": "Vesting",
        "nameLocation": "143:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Vesting.UserType",
            "id": 1060,
            "members": [
              {
                "id": 1053,
                "name": "Founder",
                "nameLocation": "192:7:7",
                "nodeType": "EnumValue",
                "src": "192:7:7"
              },
              {
                "id": 1054,
                "name": "Investor",
                "nameLocation": "209:8:7",
                "nodeType": "EnumValue",
                "src": "209:8:7"
              },
              {
                "id": 1055,
                "name": "CoFounder",
                "nameLocation": "227:9:7",
                "nodeType": "EnumValue",
                "src": "227:9:7"
              },
              {
                "id": 1056,
                "name": "PreSaleBuyer",
                "nameLocation": "246:12:7",
                "nodeType": "EnumValue",
                "src": "246:12:7"
              },
              {
                "id": 1057,
                "name": "RegularBuyer",
                "nameLocation": "268:12:7",
                "nodeType": "EnumValue",
                "src": "268:12:7"
              },
              {
                "id": 1058,
                "name": "Consumer",
                "nameLocation": "290:8:7",
                "nodeType": "EnumValue",
                "src": "290:8:7"
              },
              {
                "id": 1059,
                "name": "Retailer",
                "nameLocation": "308:8:7",
                "nodeType": "EnumValue",
                "src": "308:8:7"
              }
            ],
            "name": "UserType",
            "nameLocation": "173:8:7",
            "nodeType": "EnumDefinition",
            "src": "168:154:7"
          },
          {
            "canonicalName": "Vesting.VestingSchedule",
            "id": 1070,
            "members": [
              {
                "constant": false,
                "id": 1063,
                "mutability": "mutable",
                "name": "userType",
                "nameLocation": "370:8:7",
                "nodeType": "VariableDeclaration",
                "scope": 1070,
                "src": "361:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_UserType_$1060",
                  "typeString": "enum Vesting.UserType"
                },
                "typeName": {
                  "id": 1062,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1061,
                    "name": "UserType",
                    "nameLocations": [
                      "361:8:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1060,
                    "src": "361:8:7"
                  },
                  "referencedDeclaration": 1060,
                  "src": "361:8:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserType_$1060",
                    "typeString": "enum Vesting.UserType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1065,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "396:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 1070,
                "src": "388:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1064,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "388:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1067,
                "mutability": "mutable",
                "name": "releaseTime",
                "nameLocation": "420:11:7",
                "nodeType": "VariableDeclaration",
                "scope": 1070,
                "src": "412:19:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1066,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "412:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1069,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "446:7:7",
                "nodeType": "VariableDeclaration",
                "scope": 1070,
                "src": "441:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 1068,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "441:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "VestingSchedule",
            "nameLocation": "335:15:7",
            "nodeType": "StructDefinition",
            "scope": 1274,
            "src": "328:132:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 1073,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "479:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1274,
            "src": "466:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Admin_$1046",
              "typeString": "contract Admin"
            },
            "typeName": {
              "id": 1072,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1071,
                "name": "Admin",
                "nameLocations": [
                  "466:5:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1046,
                "src": "466:5:7"
              },
              "referencedDeclaration": 1046,
              "src": "466:5:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$1046",
                "typeString": "contract Admin"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fdb20ccb",
            "id": 1078,
            "mutability": "mutable",
            "name": "vestingSchedules",
            "nameLocation": "533:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1274,
            "src": "490:59:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1070_storage_$",
              "typeString": "mapping(address => struct Vesting.VestingSchedule)"
            },
            "typeName": {
              "id": 1077,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1074,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "498:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "490:35:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1070_storage_$",
                "typeString": "mapping(address => struct Vesting.VestingSchedule)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1076,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1075,
                  "name": "VestingSchedule",
                  "nameLocations": [
                    "509:15:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1070,
                  "src": "509:15:7"
                },
                "referencedDeclaration": 1070,
                "src": "509:15:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                  "typeString": "struct Vesting.VestingSchedule"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06c933d8",
            "id": 1082,
            "mutability": "mutable",
            "name": "whitelistedAddresses",
            "nameLocation": "587:20:7",
            "nodeType": "VariableDeclaration",
            "scope": 1274,
            "src": "555:52:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1081,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1079,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "563:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "555:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1080,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "574:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "c7798891864187665ac6dd119286e44ec13f014527aeeb2b8eb3fd413df93179",
            "id": 1088,
            "name": "TokensReleased",
            "nameLocation": "620:14:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1084,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "643:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "635:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "635:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1086,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "664:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1088,
                  "src": "656:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1085,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "634:37:7"
            },
            "src": "614:58:7"
          },
          {
            "body": {
              "id": 1102,
              "nodeType": "Block",
              "src": "724:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 1100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1098,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1073,
                      "src": "734:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$1046",
                        "typeString": "contract Admin"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1099,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1091,
                      "src": "742:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Admin_$1046",
                        "typeString": "contract Admin"
                      }
                    },
                    "src": "734:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$1046",
                      "typeString": "contract Admin"
                    }
                  },
                  "id": 1101,
                  "nodeType": "ExpressionStatement",
                  "src": "734:14:7"
                }
              ]
            },
            "id": 1103,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1094,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "712:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "716:6:7",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "712:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1096,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1093,
                  "name": "Ownable",
                  "nameLocations": [
                    "704:7:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "704:7:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "704:19:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1091,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "696:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1103,
                  "src": "690:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Admin_$1046",
                    "typeString": "contract Admin"
                  },
                  "typeName": {
                    "id": 1090,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1089,
                      "name": "Admin",
                      "nameLocations": [
                        "690:5:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1046,
                      "src": "690:5:7"
                    },
                    "referencedDeclaration": 1046,
                    "src": "690:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Admin_$1046",
                      "typeString": "contract Admin"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "689:14:7"
            },
            "returnParameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "724:0:7"
            },
            "scope": 1274,
            "src": "678:77:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1124,
              "nodeType": "Block",
              "src": "827:144:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "845:34:7",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1111,
                            "name": "whitelistedAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "846:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1113,
                          "indexExpression": {
                            "id": 1112,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "867:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "846:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4164647265737320697320616c72656164792077686974656c6973746564",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc",
                          "typeString": "literal_string \"Address is already whitelisted\""
                        },
                        "value": "Address is already whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8aec14595104da5ab7d605fcd41f2ffdd252bbd2899a5204d414bd9202d79ddc",
                          "typeString": "literal_string \"Address is already whitelisted\""
                        }
                      ],
                      "id": 1110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "837:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:77:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "837:77:7"
                },
                {
                  "expression": {
                    "id": 1122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1118,
                        "name": "whitelistedAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1082,
                        "src": "924:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1120,
                      "indexExpression": {
                        "id": 1119,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "945:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "924:33:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "960:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "924:40:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1123,
                  "nodeType": "ExpressionStatement",
                  "src": "924:40:7"
                }
              ]
            },
            "functionSelector": "41566585",
            "id": 1125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1107,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "817:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "817:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "817:9:7"
              }
            ],
            "name": "whitelistAddress",
            "nameLocation": "770:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1105,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "795:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1125,
                  "src": "787:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "787:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "786:21:7"
            },
            "returnParameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "827:0:7"
            },
            "scope": 1274,
            "src": "761:210:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "1101:282:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1140,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "1119:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1142,
                        "indexExpression": {
                          "id": 1141,
                          "name": "beneficiary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1127,
                          "src": "1140:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1119:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f742077686974656c6973746564",
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1154:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4611c14483b1c5d29d6aa0fce6725835930a1ffef991576e7129fc5a65452dda",
                          "typeString": "literal_string \"Address is not whitelisted\""
                        },
                        "value": "Address is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4611c14483b1c5d29d6aa0fce6725835930a1ffef991576e7129fc5a65452dda",
                          "typeString": "literal_string \"Address is not whitelisted\""
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1111:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1145,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:72:7"
                },
                {
                  "expression": {
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1146,
                        "name": "vestingSchedules",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1078,
                        "src": "1194:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1070_storage_$",
                          "typeString": "mapping(address => struct Vesting.VestingSchedule storage ref)"
                        }
                      },
                      "id": 1148,
                      "indexExpression": {
                        "id": 1147,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1127,
                        "src": "1211:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1194:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage",
                        "typeString": "struct Vesting.VestingSchedule storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1150,
                          "name": "userType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1130,
                          "src": "1242:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_UserType_$1060",
                            "typeString": "enum Vesting.UserType"
                          }
                        },
                        {
                          "id": 1151,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1132,
                          "src": "1252:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1152,
                          "name": "releaseTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1134,
                          "src": "1260:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 1153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1273:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_UserType_$1060",
                            "typeString": "enum Vesting.UserType"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "id": 1149,
                        "name": "VestingSchedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1070,
                        "src": "1226:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_VestingSchedule_$1070_storage_ptr_$",
                          "typeString": "type(struct Vesting.VestingSchedule storage pointer)"
                        }
                      },
                      "id": 1154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1226:53:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$1070_memory_ptr",
                        "typeString": "struct Vesting.VestingSchedule memory"
                      }
                    },
                    "src": "1194:85:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage",
                      "typeString": "struct Vesting.VestingSchedule storage ref"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:85:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1160,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1316:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1320:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1316:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1164,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1336:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Vesting_$1274",
                                  "typeString": "contract Vesting"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Vesting_$1274",
                                  "typeString": "contract Vesting"
                                }
                              ],
                              "id": 1163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1328:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1162,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1328:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1328:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1166,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1132,
                            "src": "1343:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1158,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "1297:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Admin_$1046",
                              "typeString": "contract Admin"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1303:12:7",
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 482,
                          "src": "1297:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1297:53:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207472616e73666572206661696c6564",
                        "id": 1168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        },
                        "value": "Token transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                          "typeString": "literal_string \"Token transfer failed\""
                        }
                      ],
                      "id": 1157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1289:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1289:87:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "1289:87:7"
                }
              ]
            },
            "functionSelector": "539e2fb9",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1136,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1091:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 58,
                  "src": "1091:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1091:9:7"
              }
            ],
            "name": "setVestingSchedule",
            "nameLocation": "986:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1013:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1005:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "userType",
                  "nameLocation": "1035:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1026:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_UserType_$1060",
                    "typeString": "enum Vesting.UserType"
                  },
                  "typeName": {
                    "id": 1129,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1128,
                      "name": "UserType",
                      "nameLocations": [
                        "1026:8:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1060,
                      "src": "1026:8:7"
                    },
                    "referencedDeclaration": 1060,
                    "src": "1026:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_UserType_$1060",
                      "typeString": "enum Vesting.UserType"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1053:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1045:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1134,
                  "mutability": "mutable",
                  "name": "releaseTime",
                  "nameLocation": "1069:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "1061:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1004:77:7"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:7"
            },
            "scope": 1274,
            "src": "977:406:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1272,
              "nodeType": "Block",
              "src": "1423:853:7",
              "statements": [
                {
                  "assignments": [
                    1177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1177,
                      "mutability": "mutable",
                      "name": "schedule",
                      "nameLocation": "1457:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1272,
                      "src": "1433:32:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                        "typeString": "struct Vesting.VestingSchedule"
                      },
                      "typeName": {
                        "id": 1176,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1175,
                          "name": "VestingSchedule",
                          "nameLocations": [
                            "1433:15:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1070,
                          "src": "1433:15:7"
                        },
                        "referencedDeclaration": 1070,
                        "src": "1433:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                          "typeString": "struct Vesting.VestingSchedule"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1182,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1178,
                      "name": "vestingSchedules",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1078,
                      "src": "1468:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1070_storage_$",
                        "typeString": "mapping(address => struct Vesting.VestingSchedule storage ref)"
                      }
                    },
                    "id": 1181,
                    "indexExpression": {
                      "expression": {
                        "id": 1179,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1485:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1489:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1485:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1468:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage",
                      "typeString": "struct Vesting.VestingSchedule storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1433:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1184,
                          "name": "whitelistedAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1082,
                          "src": "1514:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1187,
                        "indexExpression": {
                          "expression": {
                            "id": 1185,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1535:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1539:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1535:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1514:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "41646472657373206973206e6f742077686974656c6973746564",
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1548:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4611c14483b1c5d29d6aa0fce6725835930a1ffef991576e7129fc5a65452dda",
                          "typeString": "literal_string \"Address is not whitelisted\""
                        },
                        "value": "Address is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4611c14483b1c5d29d6aa0fce6725835930a1ffef991576e7129fc5a65452dda",
                          "typeString": "literal_string \"Address is not whitelisted\""
                        }
                      ],
                      "id": 1183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1506:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1506:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1190,
                  "nodeType": "ExpressionStatement",
                  "src": "1506:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1192,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "1595:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1601:9:7",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1595:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1194,
                            "name": "schedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "1614:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                              "typeString": "struct Vesting.VestingSchedule storage pointer"
                            }
                          },
                          "id": 1195,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1623:11:7",
                          "memberName": "releaseTime",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1067,
                          "src": "1614:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1595:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e7320617265207374696c6c206c6f636b6564",
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1636:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
                          "typeString": "literal_string \"Tokens are still locked\""
                        },
                        "value": "Tokens are still locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddc048a7b1254fa8c085a1875b4e86c4fd0becc6878ffdfe39f12fcda6bf37af",
                          "typeString": "literal_string \"Tokens are still locked\""
                        }
                      ],
                      "id": 1191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1587:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1587:75:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1199,
                  "nodeType": "ExpressionStatement",
                  "src": "1587:75:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1680:17:7",
                        "subExpression": {
                          "expression": {
                            "id": 1201,
                            "name": "schedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "1681:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                              "typeString": "struct Vesting.VestingSchedule storage pointer"
                            }
                          },
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1690:7:7",
                          "memberName": "claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1069,
                          "src": "1681:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e7320616c726561647920636c61696d6564",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1699:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b",
                          "typeString": "literal_string \"Tokens already claimed\""
                        },
                        "value": "Tokens already claimed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b",
                          "typeString": "literal_string \"Tokens already claimed\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1672:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1208,
                            "name": "schedule",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "1742:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                              "typeString": "struct Vesting.VestingSchedule storage pointer"
                            }
                          },
                          "id": 1209,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1751:6:7",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1065,
                          "src": "1742:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1760:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1742:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20746f6b656e7320746f2072656c65617365",
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1763:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
                          "typeString": "literal_string \"No tokens to release\""
                        },
                        "value": "No tokens to release"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_242d9daf4b08c0a89e4907cd15c499862e421dfed21eab25489324fe79b91914",
                          "typeString": "literal_string \"No tokens to release\""
                        }
                      ],
                      "id": 1207,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1734:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1734:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1214,
                  "nodeType": "ExpressionStatement",
                  "src": "1734:52:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_UserType_$1060",
                                "typeString": "enum Vesting.UserType"
                              },
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1216,
                                  "name": "schedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "1818:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                                    "typeString": "struct Vesting.VestingSchedule storage pointer"
                                  }
                                },
                                "id": 1217,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1827:8:7",
                                "memberName": "userType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1063,
                                "src": "1818:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_UserType_$1060",
                                  "typeString": "enum Vesting.UserType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1218,
                                  "name": "UserType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1060,
                                  "src": "1839:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_UserType_$1060_$",
                                    "typeString": "type(enum Vesting.UserType)"
                                  }
                                },
                                "id": 1219,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1848:7:7",
                                "memberName": "Founder",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1053,
                                "src": "1839:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_UserType_$1060",
                                  "typeString": "enum Vesting.UserType"
                                }
                              },
                              "src": "1818:37:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_UserType_$1060",
                                "typeString": "enum Vesting.UserType"
                              },
                              "id": 1225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1221,
                                  "name": "schedule",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1177,
                                  "src": "1871:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                                    "typeString": "struct Vesting.VestingSchedule storage pointer"
                                  }
                                },
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1880:8:7",
                                "memberName": "userType",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1063,
                                "src": "1871:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_UserType_$1060",
                                  "typeString": "enum Vesting.UserType"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1223,
                                  "name": "UserType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1060,
                                  "src": "1892:8:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_UserType_$1060_$",
                                    "typeString": "type(enum Vesting.UserType)"
                                  }
                                },
                                "id": 1224,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1901:8:7",
                                "memberName": "Investor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1054,
                                "src": "1892:17:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_UserType_$1060",
                                  "typeString": "enum Vesting.UserType"
                                }
                              },
                              "src": "1871:38:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "1818:91:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_UserType_$1060",
                              "typeString": "enum Vesting.UserType"
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1227,
                                "name": "schedule",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1177,
                                "src": "1925:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                                  "typeString": "struct Vesting.VestingSchedule storage pointer"
                                }
                              },
                              "id": 1228,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1934:8:7",
                              "memberName": "userType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1063,
                              "src": "1925:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_UserType_$1060",
                                "typeString": "enum Vesting.UserType"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 1229,
                                "name": "UserType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1060,
                                "src": "1946:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_UserType_$1060_$",
                                  "typeString": "type(enum Vesting.UserType)"
                                }
                              },
                              "id": 1230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1955:9:7",
                              "memberName": "CoFounder",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1055,
                              "src": "1946:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_UserType_$1060",
                                "typeString": "enum Vesting.UserType"
                              }
                            },
                            "src": "1925:39:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1818:146:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_UserType_$1060",
                            "typeString": "enum Vesting.UserType"
                          },
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1233,
                              "name": "schedule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1177,
                              "src": "1980:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                                "typeString": "struct Vesting.VestingSchedule storage pointer"
                              }
                            },
                            "id": 1234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1989:8:7",
                            "memberName": "userType",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1063,
                            "src": "1980:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserType_$1060",
                              "typeString": "enum Vesting.UserType"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1235,
                              "name": "UserType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1060,
                              "src": "2001:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_UserType_$1060_$",
                                "typeString": "type(enum Vesting.UserType)"
                              }
                            },
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2010:12:7",
                            "memberName": "PreSaleBuyer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1056,
                            "src": "2001:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_UserType_$1060",
                              "typeString": "enum Vesting.UserType"
                            }
                          },
                          "src": "1980:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1818:204:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420616c6c6f77656420746f20636c61696d20746f6b656e73",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2036:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f75f570040c291180180a405f9938151dc0325b63731d22cb72d52b42eb31f5",
                          "typeString": "literal_string \"Not allowed to claim tokens\""
                        },
                        "value": "Not allowed to claim tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f75f570040c291180180a405f9938151dc0325b63731d22cb72d52b42eb31f5",
                          "typeString": "literal_string \"Not allowed to claim tokens\""
                        }
                      ],
                      "id": 1215,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1797:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1797:278:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "1797:278:7"
                },
                {
                  "expression": {
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1242,
                        "name": "schedule",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "2086:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                          "typeString": "struct Vesting.VestingSchedule storage pointer"
                        }
                      },
                      "id": 1244,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2095:7:7",
                      "memberName": "claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1069,
                      "src": "2086:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2105:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2086:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:23:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1251,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2134:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2138:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2134:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1253,
                          "name": "schedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "2146:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                            "typeString": "struct Vesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2155:6:7",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1065,
                        "src": "2146:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1248,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1073,
                        "src": "2119:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Admin_$1046",
                          "typeString": "contract Admin"
                        }
                      },
                      "id": 1250,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2125:8:7",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 409,
                      "src": "2119:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2119:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "2119:43:7"
                },
                {
                  "expression": {
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1257,
                          "name": "vestingSchedules",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1078,
                          "src": "2172:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_VestingSchedule_$1070_storage_$",
                            "typeString": "mapping(address => struct Vesting.VestingSchedule storage ref)"
                          }
                        },
                        "id": 1260,
                        "indexExpression": {
                          "expression": {
                            "id": 1258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2189:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2193:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2189:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2172:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage",
                          "typeString": "struct Vesting.VestingSchedule storage ref"
                        }
                      },
                      "id": 1261,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2201:6:7",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1065,
                      "src": "2172:35:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2210:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2172:39:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "2172:39:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1266,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2241:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2245:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2241:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1268,
                          "name": "schedule",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "2253:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_VestingSchedule_$1070_storage_ptr",
                            "typeString": "struct Vesting.VestingSchedule storage pointer"
                          }
                        },
                        "id": 1269,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2262:6:7",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1065,
                        "src": "2253:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1265,
                      "name": "TokensReleased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1088,
                      "src": "2226:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1271,
                  "nodeType": "EmitStatement",
                  "src": "2221:48:7"
                }
              ]
            },
            "functionSelector": "a96f8668",
            "id": 1273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseTokens",
            "nameLocation": "1398:13:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1411:2:7"
            },
            "returnParameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1423:0:7"
            },
            "scope": 1274,
            "src": "1389:887:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1275,
        "src": "134:2144:7",
        "usedErrors": [
          13,
          18
        ],
        "usedEvents": [
          24,
          1088
        ]
      }
    ],
    "src": "32:2247:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-06-11T19:09:27.230Z",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}